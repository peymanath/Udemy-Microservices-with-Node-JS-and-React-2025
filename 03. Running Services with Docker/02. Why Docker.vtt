WEBVTT

00:01.250 --> 00:04.850
In the last video, we discussed a couple of issues that we were probably going to run into once we

00:04.850 --> 00:06.420
tried to deploy our application.

00:06.440 --> 00:09.400
So in this video, we're going to discuss something called Docker.

00:09.410 --> 00:13.520
We're going to talk about how Docker is going to make our lives a lot easier, particularly as we start

00:13.520 --> 00:15.650
to go towards production with our application.

00:15.920 --> 00:17.450
So what's Docker all about?

00:17.780 --> 00:21.620
Well, with Docker, we're going to create a series of things called Containers.

00:21.710 --> 00:24.830
A container is like an isolated computing environment.

00:24.830 --> 00:28.880
It contains everything that is required to run one single program.

00:29.240 --> 00:34.610
We're going to end up creating separate Docker containers to run each of our individual services.

00:34.760 --> 00:39.680
So we'll create one container to run the event, plus one for posts, one for comments and so on.

00:40.070 --> 00:45.650
If we ever need multiple copies of some service, say if we need multiple copies of comments, then

00:45.650 --> 00:48.050
we will start up a second docker container.

00:48.770 --> 00:54.020
So we can really imagine that there's going to be a 1 to 1 pairing between Docker containers and each

00:54.050 --> 00:55.700
instance of our running program.

00:56.600 --> 01:00.890
Let's discuss why we are going to use Docker at all and what problems it really solves.

01:01.370 --> 01:07.160
So at present, running our application makes some really big assumptions about the environment that

01:07.160 --> 01:08.420
we are really running on.

01:08.780 --> 01:10.190
Let me tell you what I mean by that.

01:10.490 --> 01:12.280
How do we start up our application right now?

01:12.290 --> 01:14.400
We run that command and PM start, right?

01:14.420 --> 01:21.170
Well, to run NPM by itself, we are assuming that NPM is installed on our local machine.

01:21.380 --> 01:25.790
We are also making the assumption that Node is installed on our local machine as well.

01:26.180 --> 01:29.540
So just to run our program, we are making those really big assumptions.

01:29.540 --> 01:33.320
We're saying NPM and Node are both installed on our local machine.

01:35.240 --> 01:40.640
One other thing to be aware of is that even running our application requires some very precise knowledge

01:40.640 --> 01:42.260
about exactly how to start it up.

01:42.440 --> 01:45.590
So we have to run the exact command and PM start.

01:46.450 --> 01:49.510
In order to make each of these different services start up and run.

01:49.840 --> 01:56.230
So in total, not only is starting up our application potentially confusing and kind of mysterious,

01:56.530 --> 02:01.510
but we also have these kind of implicit requirements about the environment that we're running our program

02:01.510 --> 02:02.110
on.

02:02.920 --> 02:07.780
The whole goal of Docker is to remove both those issues by creating containers.

02:07.780 --> 02:11.560
We're going to wrap up all the dependencies that a program requires.

02:11.560 --> 02:16.650
So that means we're going to wrap up NPM and Node into this little isolated computing environment.

02:16.660 --> 02:20.800
And we're also going to include in that container some information about how to start up and run our

02:20.800 --> 02:21.940
program as well.

02:22.560 --> 02:27.030
So all you really need to understand about Docker at this point is that it makes it really easy to run

02:27.030 --> 02:33.870
any arbitrary program you can possibly imagine not just Node.js programs, but any other language.

02:33.870 --> 02:36.620
Anything else you can just about possibly imagine.

02:36.630 --> 02:39.930
It starts to get really easy to run when you are using Docker.

02:40.320 --> 02:42.000
Now, why is that relevant?

02:42.030 --> 02:43.570
Well, let's take a quick pause right here.

02:43.590 --> 02:47.670
Once again, we're going to come back the next video and start to discuss this thing called Kubernetes.

02:47.670 --> 02:52.290
And you're going to see how this Docker thing and this idea of making it really easy to run a program

02:52.290 --> 02:54.600
works really well with Kubernetes.
