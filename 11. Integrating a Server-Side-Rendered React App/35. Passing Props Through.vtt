WEBVTT

00:00.860 --> 00:01.340
All right.

00:01.340 --> 00:02.810
Last a little bit of setup here.

00:02.810 --> 00:07.580
So we have fetch some information that we assign to page props and we needed to make sure that this

00:07.580 --> 00:10.490
information gets down into the page we're trying to display.

00:10.790 --> 00:15.070
There might also be some data, say, about the current user that we want to share with some header

00:15.080 --> 00:17.330
component that we need to eventually create as well.

00:17.330 --> 00:19.580
So how are we going to share all this information around?

00:20.090 --> 00:25.430
Well, down here at the return statement, I'm going to replace return data with return.

00:25.820 --> 00:27.830
And we're going to throw in there page props.

00:28.310 --> 00:31.130
And we're also going to pass in current user.

00:31.130 --> 00:33.620
So we need to extract the current user out of this data right here.

00:33.620 --> 00:36.830
So I'll say current user is.

00:38.000 --> 00:38.410
Data.

00:38.840 --> 00:39.950
Current user.

00:42.470 --> 00:46.130
Alternatively, we could just put in dot, dot, dot data gets.

00:46.130 --> 00:49.070
Remember that object is going to have a current user property inside of it.

00:50.730 --> 00:52.590
I'm going to delete the console log right there.

00:53.190 --> 00:59.070
So now this information that we are returning from this object is going to show up as props up here.

00:59.370 --> 01:03.990
So you'll notice that we kind of kept that same idea of naming page props with page props.

01:04.350 --> 01:09.150
So whatever we are getting out of get initial props right here is going to show up as page props up

01:09.150 --> 01:12.450
there and we are already passing that information through into the component.

01:13.020 --> 01:16.470
So now in addition, I'm going to also pull off current user.

01:17.040 --> 01:20.960
We don't really have anywhere to show the current user with this h one header right here.

01:20.970 --> 01:22.050
So how about.

01:22.050 --> 01:23.760
Well, I guess maybe we do.

01:23.790 --> 01:24.840
Let's try to print out here.

01:24.840 --> 01:25.500
How about.

01:26.890 --> 01:29.560
Current user dot email.

01:31.920 --> 01:34.950
Let's try to show some information about the current user inside that h one.

01:36.000 --> 01:37.440
All right, so let's now save this.

01:37.980 --> 01:39.120
I'm going to flip back over.

01:39.880 --> 01:41.470
And now I should see you up.

01:41.470 --> 01:42.490
There is my email.

01:42.940 --> 01:46.600
And I've also got you are not signed in, which means that, oh, that's better.

01:46.600 --> 01:47.800
I said do a refresh.

01:47.800 --> 01:49.300
So you are now signed in.

01:50.120 --> 01:50.700
Awesome.

01:50.720 --> 01:56.120
So that means that we are correctly executing our get initial props for the page or communicating that

01:56.120 --> 01:57.740
information down into the page.

01:58.030 --> 02:03.980
We've also got some custom or additional information fetching that is common to all of the different

02:03.980 --> 02:05.630
pages inside of our application.

02:06.430 --> 02:07.320
So this is pretty much it.

02:07.330 --> 02:08.890
We've now got a working solution.

02:09.430 --> 02:13.930
Now, at this point, I want to mention that what we've come up with here is kind of nasty.

02:14.230 --> 02:18.970
And the fact that NexGen did not just kind of automatically handle the fact that we want to have get

02:18.970 --> 02:20.740
initial props in multiple locations.

02:20.950 --> 02:26.410
Yeah, I wish it was a little bit easier to use in this if all this stuff seems really confusing.

02:26.410 --> 02:28.190
That is totally fine in my opinion.

02:28.210 --> 02:33.130
This is a little bit more complicated than it really had to be, and I think that maybe this API could

02:33.130 --> 02:36.210
have been designed a little bit more easily to use, but that's life.

02:36.220 --> 02:37.000
This is what we get.

02:37.000 --> 02:40.840
And to be honest with you, if we were trying to do all this server side rendering stuff from scratch

02:40.840 --> 02:45.640
and not use next us, we would have been running into our own gigantic set of issues.

02:46.360 --> 02:48.880
So at the end of the day, next year really does save us time.

02:49.450 --> 02:49.810
Okay.

02:49.810 --> 02:54.340
So we've got information fetching ability for the entire app inside of this app.

02:54.340 --> 02:59.500
Components get initial props and we also have information fetching ability for individual pages as well.

03:00.770 --> 03:00.920
Okay.

03:01.040 --> 03:02.160
Let's take a pause right here.

03:02.180 --> 03:03.380
Continue in just a moment.
