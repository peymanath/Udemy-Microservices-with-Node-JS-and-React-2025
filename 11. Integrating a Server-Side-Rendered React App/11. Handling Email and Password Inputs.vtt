WEBVTT

00:00.560 --> 00:02.570
We've got the basics of our form put together.

00:02.570 --> 00:06.080
So we're now going to start to add in some event handlers to our inputs.

00:06.560 --> 00:11.150
We're going to put on a submit handler for the form and make sure that whenever a user enters something

00:11.150 --> 00:15.620
and clicks that button right there or otherwise attempts to submit the form, we ultimately make a request

00:15.620 --> 00:17.030
to our off service.

00:17.940 --> 00:22.290
Now in order to keep track of whatever user has typed inside these two inputs, we're going to need

00:22.290 --> 00:24.090
to keep track of some piece of state.

00:24.330 --> 00:27.750
So we're going to be using hooks on this project at the very top.

00:28.470 --> 00:32.310
I'm going to import the use state hook from React.

00:33.960 --> 00:37.260
Then inside the component, I'm going to create two new pieces of state.

00:38.310 --> 00:39.660
I call one email.

00:39.990 --> 00:41.250
The other set email.

00:42.510 --> 00:44.400
And I'll default that to be an empty string.

00:45.380 --> 00:47.570
And then password and set password.

00:49.220 --> 00:50.660
Two empty string as well.

00:53.380 --> 00:58.750
I'll then start to wire up these different pieces of state as values for these inputs, along with some

00:58.750 --> 01:00.490
on change event handlers.

01:01.090 --> 01:04.510
So first on email, I'll set the value as email.

01:05.700 --> 01:07.920
And also put in an on chain Chandler.

01:10.970 --> 01:15.890
I'm going to abbreviate the event argument to on change right here as simply E instead of event.

01:16.710 --> 01:18.720
So then we'll take a look at that event object.

01:18.720 --> 01:24.930
We'll look at target value and use that to update our email piece of state using the set email function.

01:25.080 --> 01:29.370
So we'll do set email has an E target value.

01:29.400 --> 01:31.530
I'm going to save this so you can see that entire line.

01:34.050 --> 01:34.830
That looks good.

01:35.590 --> 01:39.040
I'll then repeat that same process for the password input down here as well.

01:40.400 --> 01:42.470
They'll put in a value of password.

01:44.100 --> 01:51.090
And then whenever this thing gets changed, we'll take that event and call set password with e dot target

01:51.090 --> 01:51.930
dot value.

01:56.470 --> 01:56.800
All right.

01:56.800 --> 01:59.140
So we're now tracking those two pieces of state.

01:59.410 --> 02:03.820
Now, the last thing we have to do is make sure that any time someone hits the enter key or either or

02:03.820 --> 02:08.650
clicks that button down here at the bottom, we want to handle the submission event coming off this

02:08.650 --> 02:09.580
form element.

02:09.790 --> 02:12.460
So I'll put on an on submit event handler.

02:12.820 --> 02:17.170
Any time a user tries to submit the form, I will run a helper function that I'm going to simply call

02:17.170 --> 02:17.350
on.

02:17.350 --> 02:17.860
Submit.

02:18.710 --> 02:20.600
And I'll define intimate right above.

02:23.580 --> 02:25.650
I'll take the event object coming out of that.

02:25.830 --> 02:31.470
I can either refer to it as E or since we are in a long form function right here, I'll call it event

02:31.470 --> 02:33.000
instead just for clarity.

02:34.630 --> 02:39.730
We're going to call prevent default on there to make sure that the form does not try to submit itself

02:39.730 --> 02:40.540
through the browser.

02:40.900 --> 02:45.430
And then right now, let's just do a console log of the email and password.

02:47.600 --> 02:47.840
Okay.

02:47.840 --> 02:48.710
We'll save this.

02:49.340 --> 02:50.810
We will flip back over.

02:53.110 --> 02:54.520
I'm going to open up my console.

02:55.640 --> 03:00.980
And I'm going to enter in an email address of test at test and a password of password.

03:01.590 --> 03:04.250
I'll click on sign up and there's our stuff.

03:05.060 --> 03:09.830
Now right away, you're going to notice that there's some like mystery stuff going on here we can't

03:09.830 --> 03:10.330
ignore.

03:10.340 --> 03:16.370
If you see like an air around, get something rebuilding or some deprecation, notice we can ignore

03:16.400 --> 03:17.990
all that stuff for right now.

03:19.350 --> 03:24.420
Well, without a doubt, we can have some inputs being put inside of our form, submit the form, and

03:24.420 --> 03:28.920
then, hey, we got our actual email and password that we need to submit to the back end server.

03:29.550 --> 03:34.410
So at this point, we now need to figure out how we can get our application to somehow communicate with

03:34.410 --> 03:35.490
our service.

03:35.670 --> 03:39.990
So let's take a quick pause right here and then figure out how we can actually take that email and password

03:39.990 --> 03:42.210
and submit it to our back end in just a moment.
