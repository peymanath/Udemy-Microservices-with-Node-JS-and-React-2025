WEBVTT

00:00.570 --> 00:05.190
In the last section, we found that we were able to connect to Rita Sealy inside of our running Docker

00:05.190 --> 00:10.830
container and notice how mine is still running over here on the second window by adding on the dash

00:10.830 --> 00:11.930
it flag.

00:11.940 --> 00:16.200
So when I did that, we saw, yep, we got this prompt here, we could enter stuff in.

00:16.200 --> 00:19.610
I could then press control, see to exit back out.

00:19.620 --> 00:24.420
However, if I tried running this command without the TX flag.

00:26.050 --> 00:29.350
It appeared that I just got kicked directly back over to my terminal.

00:29.350 --> 00:34.570
So in this section, I want to give you a better idea of what this dash flag right here is really doing

00:34.570 --> 00:35.290
for us.

00:35.440 --> 00:40.180
The first thing you need to understand is a little bit more about how processes run inside of a Linux

00:40.180 --> 00:40.930
environment.

00:40.960 --> 00:45.670
As a quick reminder, when you are running Docker on your machine, every single container that you

00:45.670 --> 00:50.440
are running is running inside of a virtual machine running Linux.

00:50.440 --> 00:56.170
So these processes are really being executed inside of a Linux world, even if you're on Mac or Windows.

00:56.890 --> 00:57.190
All right.

00:57.190 --> 00:58.090
So with that in mind.

00:59.090 --> 01:04.610
In this diagram, we've got three different running processes all inside in theory of a running container

01:04.610 --> 01:06.920
or a really inside of a Linux environment.

01:07.250 --> 01:12.740
Every process that we create in a Linux environment has three communication channels attached to it

01:12.740 --> 01:16.460
that we refer to as standard in, standard out and standard air.

01:17.120 --> 01:22.910
These channels are used to communicate information either into the process or out of the process.

01:23.210 --> 01:28.010
Standard in, as you might guess, is used to communicate information into the process.

01:28.010 --> 01:35.270
So when you are at your terminal and you type stuff in the stuff you type is being directed in to a

01:35.270 --> 01:41.390
running standard and channel attached to say theoretically the standard out channel that is attached

01:41.390 --> 01:46.310
to any given process is going to convey information that is coming from the process.

01:46.310 --> 01:51.770
So standard out might be redirected over to your running terminal and that's going to end up as being

01:51.770 --> 01:53.900
stuff that is going to show up on the screen.

01:54.890 --> 02:00.170
Standard error is very similar, but it conveys information out of the process that is kind of like

02:00.170 --> 02:01.430
an error in nature.

02:01.430 --> 02:06.530
So if radically has some error inside of it, that's going to be communicated to the outside world over

02:06.530 --> 02:11.600
the standard error channel and very similar to standard out, that's going to be redirected to show

02:11.600 --> 02:13.310
up on the screen of your terminal.

02:14.920 --> 02:20.260
So how does that relate to the flag when we do the Docker exec dash it?

02:20.440 --> 02:24.580
Well, the it right here is actually two separate little flags.

02:24.610 --> 02:28.810
In reality, it's a dash I and a dash T like so.

02:28.960 --> 02:34.990
But by convention, we usually just kind of shorten it down to be simply it, which is 100% equivalent

02:34.990 --> 02:36.640
to the two separate flags.

02:37.120 --> 02:43.990
The dash I on here means when we execute this new command inside the container, we want to attach our

02:43.990 --> 02:48.960
terminal to the standard end channel of that new running process.

02:48.970 --> 02:55.270
So by adding on the dash flag, we are saying make sure that any stuff that I type gets directed to

02:55.270 --> 02:57.250
standard in of Rita cli.

02:58.260 --> 03:03.350
The flag is what kind of makes all this checks to show up a little bit pretty.

03:03.360 --> 03:05.670
Now, in reality, it's doing a little bit more than that.

03:05.670 --> 03:10.590
But at the end of the day, the real effect that the dash ti flag is to make sure that all the text

03:10.590 --> 03:15.930
that you are entering in and that is coming out shows up in a nicely formatted manner on your screen.

03:15.930 --> 03:18.240
And again, it's doing a little bit more behind the scenes than that.

03:18.240 --> 03:20.370
But at the end of the day, that's kind of its effect.

03:20.700 --> 03:26.970
Let's try attaching or doing our Docker exec on the running container one more time and leaving off

03:26.970 --> 03:29.190
the dash t flag and just seeing what happens.

03:30.120 --> 03:33.540
So I'll do a Docker PS to get my containers ID again.

03:34.040 --> 03:37.620
Then I'll do a Docker exec and then we'll do only dash I.

03:37.650 --> 03:42.140
This time I'll put the ID in and then I'll do a red CLI.

03:42.630 --> 03:46.020
And so now this time you'll notice how I have my cursor over here.

03:46.020 --> 03:51.030
It appears that this thing is waiting for input, but I didn't do not see that kind of nicely formatted

03:51.030 --> 03:52.620
indentation I saw before.

03:52.890 --> 03:58.710
And if I put in like set my value five before, I had a little bit of autocomplete functionality.

03:58.710 --> 04:01.380
But this time that autocomplete is definitely not there.

04:02.010 --> 04:08.250
I can still run that command though, and I still see OC and I can still do get my value and I still

04:08.250 --> 04:09.030
see the value come out.

04:09.030 --> 04:12.270
But again, all, all this stuff is not nicely formatted.

04:12.270 --> 04:16.140
And so that's kind of the purpose more or less kind of simplifying things here.

04:16.140 --> 04:18.270
Just a little bit of that Dashti flag.

04:20.270 --> 04:20.990
So that's pretty much it.

04:20.990 --> 04:22.550
That's the purpose of it.

04:22.580 --> 04:27.890
It allows us to have stuff that we type into our terminal directed into that running process and allows

04:27.890 --> 04:30.710
us to get information out back over to our terminal.

04:30.920 --> 04:31.920
So then mind.

04:31.940 --> 04:34.820
Let's take a quick break right here and continue in the next section.
