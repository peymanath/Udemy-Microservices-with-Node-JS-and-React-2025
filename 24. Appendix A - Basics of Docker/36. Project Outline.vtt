WEBVTT

00:00.600 --> 00:06.240
We've now successfully learned how to create a Docker image in order to run Redis on our machine locally.

00:06.240 --> 00:09.930
But there's still a lot to learn about creating an image in running Docker applications.

00:09.930 --> 00:12.770
So in this section we're going to kick off a new project.

00:12.780 --> 00:19.560
The goal of this project is to create a tiny Node.js web application, wrap it inside of a Docker container,

00:19.560 --> 00:25.230
and then be able to access that web application from a browser running on your local machine.

00:25.350 --> 00:27.750
We're not going to worry about deploying this app right now.

00:27.750 --> 00:31.980
We're just focused on getting Node.js to work inside of a Docker container.

00:32.520 --> 00:36.870
When we first begin by showing you a quick outline of some of the steps that we're going to go through.

00:37.830 --> 00:42.060
So the first thing we have to do is create an actual Node.js web application.

00:42.060 --> 00:47.460
Now, if you don't have any experience with Node.js and you're more of a Java person or Ruby or whatever

00:47.460 --> 00:49.380
it might be, that is totally fine.

00:49.380 --> 00:53.130
The code that we're going to write for the JavaScript side of things is totally optional.

00:53.130 --> 00:58.590
So you can either watch the video where we will put together the server or you can entirely skip it

00:58.590 --> 01:02.880
and you can just download the single file or one or two files that you're going to need.

01:03.090 --> 01:06.780
So if you don't know anything about Node.js, no problem whatsoever.

01:07.590 --> 01:11.490
After we create the Node.js web app, will then author a Docker file.

01:11.730 --> 01:17.670
We're going to make a Docker file to create an image that is going to be used to run our web server

01:17.670 --> 01:18.840
inside of a container.

01:19.260 --> 01:21.530
So we're going to build the image from the Docker file.

01:21.540 --> 01:26.370
We will run the image as a container on our local machine, and then we will make sure that we are able

01:26.370 --> 01:31.110
to connect to that running web application inside the container from our browser.

01:32.130 --> 01:36.690
Now, last thing I want to mention here, and this might be might be something that makes you a little

01:36.690 --> 01:37.410
bit unhappy.

01:37.410 --> 01:39.920
But I'm just going to throw a disclaimer out here.

01:39.930 --> 01:44.060
We're going to do some things in this project a little bit wrong.

01:44.070 --> 01:49.230
So when we put together our Docker file, we're going to make a couple of mistakes and we're doing this

01:49.230 --> 01:54.390
very much on purpose because these are going to be some mistakes that I really expect you to make when

01:54.390 --> 01:57.420
you start working on Docker on your own projects.

01:57.420 --> 01:59.550
So I want you to see these mistakes.

01:59.550 --> 02:03.300
I want you to see the error messages, and I want you to learn how to fix them.

02:03.450 --> 02:07.710
So just a quick disclaimer again, we're going to do things just a little bit wrong.

02:07.710 --> 02:12.900
Don't worry, I will be very clear when we come across an error and I will say very, very clearly,

02:12.900 --> 02:14.280
hey, we did this on purpose.

02:14.280 --> 02:16.350
Here's the mistake and here's how to fix it.

02:16.350 --> 02:21.090
I know that sometimes in a tutorial it's really frustrating when things are done incorrectly.

02:21.090 --> 02:21.870
I'm totally aware of that.

02:21.870 --> 02:25.920
So I'm going to make sure that these errors are as distinct and highlighted as possible.

02:26.280 --> 02:26.640
All right.

02:26.640 --> 02:28.500
So with that in mind, let's take a quick break.

02:28.500 --> 02:33.150
When we come back, the next section we're going to start putting together this Node.js Web application.

02:33.150 --> 02:34.860
So I'll see you in just a minute.
