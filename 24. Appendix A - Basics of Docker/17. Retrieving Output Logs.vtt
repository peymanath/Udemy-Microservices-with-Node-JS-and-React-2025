WEBVTT

00:00.720 --> 00:05.100
We were just talking about the differences between starting and creating a container.

00:05.490 --> 00:10.410
Along the way we ran the command Docker create and then something like Busy Box Echo.

00:10.440 --> 00:11.340
Hi there.

00:11.940 --> 00:17.010
We then got this printout of the container ID that was created and then we found that we could start

00:17.010 --> 00:21.270
up the container by running Docker start and then pasting the ID in.

00:21.360 --> 00:24.050
However, there is a real little catch to that.

00:24.060 --> 00:29.160
We found that in order to actually see information being printed out from the container, we had to

00:29.160 --> 00:31.450
add in that dash a flag right there.

00:31.470 --> 00:36.540
So what would happen if you wanted to get all the output from the container without having to add in

00:36.540 --> 00:37.740
that dash flag?

00:37.770 --> 00:43.560
For example, let's imagine that running Docker start like this was a really expensive process and we

00:43.560 --> 00:47.250
started up a process inside there that would take many minutes to run.

00:47.700 --> 00:52.770
Chances are, if we forgot to add on the dash a flag to see the output from that, we might be a little

00:52.770 --> 00:58.290
bit frustrated with ourselves because then we would have to rerun Docker, start dash a second time

00:58.290 --> 01:00.210
and wait another couple of minutes.

01:01.170 --> 01:08.130
In order to get around that, we can make use of an additional command of Docker logs and then the ID

01:08.130 --> 01:13.200
of the container that we want to get output from the logs command can be used to look at a container

01:13.200 --> 01:16.500
and retrieve all the information that has been emitted from it.

01:16.800 --> 01:22.830
Let's try using that Docker, create start and then logs command again and see what happens.

01:23.400 --> 01:29.160
So I will do docker create busy box and I will echo.

01:29.160 --> 01:30.030
Hi there.

01:30.780 --> 01:35.940
I'll then take that ID and run docker, start and paste the ID.

01:37.270 --> 01:38.860
That starts up the container.

01:38.950 --> 01:40.720
It executes Echo High.

01:40.750 --> 01:43.420
They're inside of it, and then it immediately exits.

01:43.420 --> 01:48.280
And so now at this point, I want to go back to that stopped container and get all the logs that have

01:48.280 --> 01:49.870
been emitted inside of it.

01:49.960 --> 01:54.550
So to do so, I can run Docker logs and then paste that ID in.

01:55.780 --> 01:59.730
And I'll see that when the container had been running, it had printed out the string.

01:59.740 --> 02:00.640
Hi there.

02:01.570 --> 02:06.850
One thing to be really clear about is that by running docker logs, I'm not rerunning or restarting

02:06.850 --> 02:09.630
the container to in any way, shape or form.

02:09.640 --> 02:14.560
I'm just getting a record of all the logs that have been emitted from that container.

02:15.640 --> 02:20.500
The Docker logs command is something that we're going to be using quite a bit as we are trying to debug

02:20.500 --> 02:25.540
or set up new containers because as you can see, it's a really good way to kind of inspect a container

02:25.540 --> 02:27.340
and see what's going on inside of it.

02:27.970 --> 02:28.420
All right.

02:28.420 --> 02:29.980
Still a couple of more commands to get through.

02:30.010 --> 02:33.280
So let's take another quick pause right here and continue in the next section.
