WEBVTT

00:00.660 --> 00:04.020
We've now identified these concurrency issues in action.

00:04.180 --> 00:05.610
Now we need to figure out how to fix it.

00:05.640 --> 00:09.990
We discussed way long ago when we were first talking about streaming server, how we're going to solve

00:09.990 --> 00:11.070
these concurrency issues.

00:11.070 --> 00:14.790
But let me just give you a very quick reminder, because it has been a pretty good amount of time.

00:15.600 --> 00:18.300
So once again, we're going to make the series of three requests.

00:18.540 --> 00:22.290
We're going to first create the ticket, then give it a price of ten and then 15.

00:22.770 --> 00:25.140
So we'll start first with the ticket to a price of five.

00:26.860 --> 00:29.560
So inside of our ticket service, we're going to process that request.

00:30.690 --> 00:31.800
We're going to create some ticket.

00:31.890 --> 00:37.110
We'll again say that it has an idea of Q set its price to five and then very critically the very first

00:37.110 --> 00:42.240
time we create a record inside of our tickets database, we're going to assign it a version number and

00:42.240 --> 00:44.250
we'll start off with a version number of one.

00:45.950 --> 00:48.830
We're then going to produce and emit an event.

00:49.540 --> 00:54.710
And this event is going to list not only the ID, the price, but also the version as well.

00:54.730 --> 00:57.160
Now, naturally, remember, tickets also have a title.

00:57.160 --> 00:59.740
We're just ignoring the title for the purposes of this diagram.

01:00.160 --> 01:01.900
So we'll get this thing a version of one.

01:02.350 --> 01:07.870
The version or that event is going to flow out to Napster's server and then onto one of our order services.

01:09.060 --> 01:10.230
Inside of our order service.

01:10.230 --> 01:12.400
We're going to take a look at this event.

01:12.420 --> 01:15.690
We're going to attempt to create a record or a ticket with an idea.

01:16.050 --> 01:17.340
Q A price of five.

01:17.340 --> 01:21.240
And because this is the first time that we are creating this record, the first time we are touching

01:21.240 --> 01:25.890
it ever, we're going to just say, okay, let's just take a version of one and stick it directly into

01:25.890 --> 01:26.670
the database.

01:27.270 --> 01:30.900
So I would put in a price of five and then the version of one like so.

01:32.050 --> 01:37.330
So now we're going to imagine that we get these two follow up requests in very quick succession.

01:37.330 --> 01:42.640
So the request to assign a price of ten and the request to get a price of 15.

01:43.090 --> 01:45.610
So we will process that inside of our ticket service.

01:45.610 --> 01:50.560
So we'll go to ten and whenever we make an update to our ticket, we are going to also increment the

01:50.560 --> 01:51.370
version number.

01:51.370 --> 01:57.340
So any time we make any change whatsoever to a ticket, we will always increment the version number.

01:58.280 --> 02:01.640
So because we change this ticket, we will increment the version number to two.

02:02.600 --> 02:04.910
And then we'll do the same thing with this other request right here.

02:05.420 --> 02:06.770
Update the price to 15.

02:06.770 --> 02:10.100
And because we made a change to this record, we will update the version to three.

02:11.530 --> 02:13.330
So along with those two requests.

02:13.330 --> 02:17.320
So we just processed your naturally also going to emit two separate events.

02:18.610 --> 02:19.600
So we get updated.

02:19.600 --> 02:20.370
Number one right here.

02:20.380 --> 02:23.920
Update number two, the first one has a price of ten, then a price of 15.

02:23.920 --> 02:27.640
And also very critically, we get a version of two and a version of three.

02:28.180 --> 02:32.080
So now let's imagine what would happen if we process these events in the correct order.

02:32.350 --> 02:36.790
So I would imagine that we're going to process this 1/1 since that is the correct order.

02:37.720 --> 02:42.720
So this order service is going to say, hey, time to update some record called Queue.

02:43.120 --> 02:45.240
The order service is going to look into the database.

02:45.250 --> 02:49.240
It's going to find record queue and see that it has a version of one.

02:49.570 --> 02:52.510
It's then going to take a look at the version list inside the event.

02:53.270 --> 02:58.820
Because we have already processed version one of this record and this incoming record as a version of

02:58.850 --> 03:01.950
two, we can say, awesome, fantastic.

03:01.970 --> 03:04.250
There are no missing versions that we're missing out on.

03:04.280 --> 03:06.380
Let's go ahead and process this event.

03:06.590 --> 03:10.430
So we would set the price to ten, increment our version to two, and that's it.

03:10.430 --> 03:11.090
We're all good.

03:12.150 --> 03:15.120
We would then take care of the other updated event.

03:15.390 --> 03:19.710
So once again we would take a look at record to see that we are on version two.

03:19.740 --> 03:21.750
This event describes version three.

03:21.780 --> 03:22.290
Awesome.

03:22.290 --> 03:23.730
We have not missed any versions.

03:23.730 --> 03:25.050
Let's process this thing.

03:25.050 --> 03:28.200
So we go to price of 15 and a version of three.

03:28.560 --> 03:30.630
So again, that is the ideal scenario.

03:30.750 --> 03:31.770
Let's walk through this.

03:31.770 --> 03:34.680
If we accidentally start to process our events out of order.

03:35.970 --> 03:41.370
So we're going to imagine that we first processed the update to 15, not what we want to do, but it

03:41.370 --> 03:44.760
might happen as we saw seven times out of 200 cases.

03:44.760 --> 03:46.980
We process these things out of order.

03:48.110 --> 03:49.760
So what would happen in this scenario?

03:50.030 --> 03:55.520
Well, we would take a look at the record with Q we'd see that has a version of one, but we have a

03:55.520 --> 03:58.720
record right here or an event that describes version three.

03:58.730 --> 04:01.340
That means that we have missed out on a version.

04:02.160 --> 04:03.040
Version two.

04:03.060 --> 04:08.370
So because we have a missing version, we would throw some kind of error and say, Sorry, but we cannot

04:08.370 --> 04:09.990
process this event right now.

04:10.560 --> 04:14.400
Our listener would eventually time out on processing this thing.

04:14.400 --> 04:19.740
It would time out because we would not call that function and because we have not act or acknowledged

04:19.740 --> 04:20.700
this event.

04:21.570 --> 04:25.720
That streaming server is going to decide to remit it after 5 seconds.

04:26.350 --> 04:31.780
So in that 5/2 window, we are essentially hoping that we're going to see the correct events start to

04:31.780 --> 04:32.320
show up.

04:33.210 --> 04:37.470
So this ticket updated over here of version three is going to essentially time out and we're going to

04:37.470 --> 04:39.480
see it again in 5 seconds.

04:39.750 --> 04:42.780
And then in the meantime, we will see the correct event show up.

04:42.780 --> 04:46.530
And this one actually IDC's cue has a version of two.

04:46.950 --> 04:47.310
Awesome.

04:47.310 --> 04:49.740
We're currently on version one, so we can process this one.

04:49.740 --> 04:52.260
So we could increment to version two price of ten.

04:53.340 --> 04:53.940
And that's it.

04:53.940 --> 04:55.830
We would act that event and we're all good to go.

04:56.520 --> 05:02.610
Then after those 5 seconds, that streaming server would reissue this event, and now we have processed

05:02.610 --> 05:03.850
event version two.

05:03.900 --> 05:05.280
So now we're on to version three.

05:05.790 --> 05:06.470
Awesome.

05:06.480 --> 05:07.800
So we can process this thing.

05:07.800 --> 05:09.450
We would change our price to 15.

05:10.080 --> 05:12.690
Set our version to three and we are all done.

05:13.350 --> 05:18.030
So that is how this entire version flag right here is going to make sure that we always process these

05:18.030 --> 05:19.620
events in the correct order.

05:21.070 --> 05:23.350
Now, this is all stuff that we covered earlier on inside the course.

05:23.350 --> 05:27.670
And you might remember that the last thing I said inside that video where we first discussed this was,

05:27.670 --> 05:31.300
gee, it kind of sounds like a pain to have to manage this version.

05:31.300 --> 05:32.160
Flag Right.

05:32.170 --> 05:34.300
Kind of sounds like that's a little bit challenging.

05:34.570 --> 05:38.860
But you might recall that in the previous video I had said and I'm going to say it again right now,

05:38.860 --> 05:44.650
it turns out that Mongoose and MongoDB can manage all of this version stuff for us automatically.

05:45.160 --> 05:45.910
Yes, that's right.

05:45.910 --> 05:48.100
We don't actually have to do any of the stuff ourselves.

05:48.100 --> 05:52.960
MongoDB and Mongoose can deal with all the versioning issues on its own, and we don't have to worry

05:52.960 --> 05:54.670
about messing around with the version at all.

05:55.740 --> 05:56.070
Okay.

05:56.070 --> 05:57.660
So let's take a pause right here.

05:57.660 --> 06:01.350
When we come back, next video, we're going to take a look at how we're going to use Mongoose and MongoDB

06:01.380 --> 06:04.110
to implement this versioning thing for us.

06:04.210 --> 06:07.620
The one thing I do want to mention, just as a quick little heads up.

06:08.650 --> 06:11.860
Is that we are going to be altering the structure of these events.

06:12.070 --> 06:16.810
So in other words, our ticket update event and the ticket event, they are going to have to include

06:16.810 --> 06:18.010
this new version flag.

06:18.010 --> 06:20.890
And that means that we will have to make an update to our common module.

06:20.920 --> 06:24.460
I just want to mention that right now because that is something we're going to do very quickly.

06:24.470 --> 06:28.510
We're going to update our common module, update the definition of our different events and say that

06:28.510 --> 06:30.820
they're going to have this version flag included on them.

06:31.420 --> 06:31.750
Okay.

06:31.810 --> 06:32.680
Not a big deal, though.

06:32.710 --> 06:34.810
I just wanted you to know that was something we're going to have to do.

06:35.140 --> 06:35.920
Let's take a pause right here.

06:35.920 --> 06:39.850
We're going to figure out how to use Mongoose, Mongoose and Mongo to manage this version.

06:39.850 --> 06:41.140
Flag in just a moment.
