WEBVTT

00:01.530 --> 00:05.340
الان باید سرویس نظارت (moderation service) رو باز کنیم و مطمئن بشیم کدی داریم که

00:05.340 --> 00:07.470
بتونه event مربوط به ایجاد کامنت رو پردازش کنه.

00:07.710 --> 00:13.680
به‌محض اینکه این کامنت رو دریافت کردیم، باید محتوای اون رو بررسی کنیم و بعد تلاش کنیم تا یک event جدید به اسم comment moderated منتشر کنیم.

00:16.740 --> 00:18.180
بریم سراغ پیاده‌سازی این بخش.

00:19.280 --> 00:22.250
برمی‌گردم به ادیتور و سرویس moderation رو باز می‌کنم.

00:22.250 --> 00:24.500
داخلش فایل index.js رو پیدا می‌کنم.

00:25.140 --> 00:31.100
اینجا یک handler برای POST داریم که هر درخواستی که به endpoint مربوط به eventها بیاد رو بررسی می‌کنه.

00:31.110 --> 00:34.350
پس اینجا همون‌جاییه که ما event رو از event broker دریافت می‌کنیم.

00:34.800 --> 00:39.870
یادت باشه خود event داخل ویژگی `body` از `req` هست چون الان همه‌ی eventها به صورت POST میان.

00:39.870 --> 00:42.480
پس باید type و data رو از داخل req.body بیرون بکشیم.

00:43.410 --> 00:49.050
بعدش، type رو بررسی می‌کنیم. اگر type برابر بود با comment created، یعنی یک کامنت جدید ساخته شده،

00:49.050 --> 00:49.500
می‌ریم سراغ فرآیند بررسی محتوا.

00:50.970 --> 00:56.490
اولین قدم اینه که تصمیم بگیریم آیا کامنت تأیید بشه یا رد.

00:56.490 --> 00:59.310
برای این کار یک شرط سه‌تایی می‌نویسیم.

01:00.850 --> 01:05.290
مثلاً یک متغیر status تعریف می‌کنیم که از روی data.content مقداردهی میشه.

01:05.830 --> 01:08.740
یادت باشه این `content` همون متن کامنت هست.

01:09.130 --> 01:13.270
بررسی می‌کنیم که آیا عبارت "orange" داخلش هست یا نه.

01:13.300 --> 01:16.360
اگر باشه، status رو برابر با "rejected" می‌ذاریم.

01:16.930 --> 01:20.920
در غیر این صورت مقدار "approved" رو بهش می‌دیم.

01:22.230 --> 01:28.170
الان که کامنت بررسی شده و status مشخصه، وقتشه که event جدیدی به اسم comment moderated رو منتشر کنیم.

01:28.200 --> 01:32.490
پس باید یک درخواست POST بفرستیم به event bus، مثل دفعات قبل.

01:35.760 --> 01:38.520
کامنت رو به همراه status جدیدش داخل payload می‌فرستیم.

01:38.880 --> 01:42.960
پس بریم یک درخواست POST بفرستیم به event bus.

01:43.200 --> 01:47.550
مثل همیشه، URL رو می‌نویسیم و مشخصات event رو هم بهش می‌دیم.

01:48.850 --> 01:53.020
آدرس میشه: http://localhost:4005/events

01:55.640 --> 01:57.230
type رو می‌ذاریم: comment moderated

01:58.920 --> 02:07.770
و داخل data باید اطلاعات کامنت باشه: ID، postID، content، و status.

02:09.870 --> 02:13.290
مثلاً ID میشه data.id

02:14.520 --> 02:18.630
postID میشه data.postId

02:19.410 --> 02:21.450
status همون مقدار محاسبه‌شده ماست

02:21.540 --> 02:24.150
و content هم میشه data.content

02:24.510 --> 02:28.020
فقط یک نکته مهم: من این فیلدهای ID و postID و content رو همینطوری نوشتم.

02:29.830 --> 02:32.650
یعنی از روی ذهنم نوشتم، حتماً باید چک کنیم واقعاً تو data هستن یا نه.

02:34.930 --> 02:38.350
چون ممکنه اسم دقیقشون فرق داشته باشه یا ساختارشون متفاوت باشه.

02:39.060 --> 02:42.630
پس بهتره قبلش مطمئن بشیم که event واقعا این فیلدها رو داره.

02:44.310 --> 02:49.170
در غیر این صورت ممکنه موقع ارسال event به event bus به مشکل بخوریم.

02:52.350 --> 02:57.600
من این پراپرتی‌ها رو از حفظ نوشتم ولی خیلی راحت ممکن بود که یادم بره چه فیلدهایی داخل event از نوع comment created هست.

02:57.600 --> 03:00.900
من و تو می‌دونیم این event چه ویژگی‌هایی داره چون همین چند لحظه پیش

03:01.200 --> 03:05.850
به تعریف اون نگاه کردیم، وقتی که از داخل comment service ارسال می‌شد.

03:05.850 --> 03:09.330
این همون comment service هست که داخلش اون event ساخته و ارسال شد.

03:09.870 --> 03:11.090
پس می‌تونیم برگردیم به این قسمت

03:11.100 --> 03:15.390
و به راحتی چک کنیم که event comment created چه پراپرتی‌هایی داره.

03:15.390 --> 03:18.000
اما تصور کن داخل یه سیستم بزرگ کار می‌کردیم.

03:18.390 --> 03:22.680
یاد گرفتن اینکه هر event چه داده‌هایی داخلش داره می‌تونه واقعاً سخت بشه.

03:22.680 --> 03:27.100
قطعاً نمی‌تونیم همه چیز رو از حفظ نگه داریم، پس احتمال زیاد نیاز داریم به یک داکیومنتیشن یا چیزی مشابه

03:27.120 --> 03:27.510
که نشون بده

03:27.510 --> 03:27.990
داخل هر event

03:27.990 --> 03:32.760
چه فیلدهایی وجود داره و ساختارش چیه، مخصوصاً وقتی تعداد eventها زیاد می‌شن.

03:32.760 --> 03:38.730
فقط خواستم این موضوع رو تو ذهنت نگه داری چون در ادامه خیلی به دردمون می‌خوره.

03:38.730 --> 03:41.430
الان برگردیم سراغ کدی که نوشتیم.

03:41.460 --> 03:44.640
چون داخلش از `await` استفاده کردیم، باید فانکشن رو با `async` تعریف کنیم.

03:44.640 --> 03:45.780
این نکته رو فراموش نکن.

03:47.960 --> 03:48.270
خب،

03:48.290 --> 03:51.380
بعد از بسته شدن `if` باید حتماً یک response برگردونیم.

03:51.410 --> 03:53.720
اگر نه، request همین‌طور معلق می‌مونه و هیچ پاسخی داده نمیشه.

03:54.110 --> 03:58.430
حالا همه‌چیز خوب به نظر می‌رسه و داریم event مربوط به comment moderated رو می‌سازیم و می‌فرستیم برای event bus.

03:58.430 --> 04:00.350
فقط یک نکته کوچیک باقی مونده.

04:00.380 --> 04:02.930
الان event bus هنوز هیچ eventی برای moderation service نمی‌فرسته،

04:04.420 --> 04:04.680
چرا؟

04:04.690 --> 04:05.530
چون moderation service

04:05.530 --> 04:11.290
بعد از ساختن event bus اضافه شده و هنوز توی سیستم ثبت نشده تا بتونه event دریافت کنه.

04:11.770 --> 04:14.710
پس باید بریم و مطمئن بشیم که event bus به moderation service هم event ارسال می‌کنه.

04:22.870 --> 04:28.450
باید مطمئن بشیم که هر وقت event bus یک کامنت دریافت یا ایجاد می‌کنه، اون رو برای سرویس moderation هم ارسال کنه.

04:28.450 --> 04:29.530
نه فقط بقیه سرویس‌ها.

04:30.500 --> 04:35.780
برمی‌گردم به پوشه‌ی event-bus و فایل index.js رو باز می‌کنم.

04:36.770 --> 04:40.640
اینجا همون جاییه که تمام eventها رو دریافت می‌کنیم و بعد به تمام سرویس‌های فعال ارسالشون می‌کنیم.

04:40.640 --> 04:42.980
الان ارسال به سرویس moderation رو هنوز اضافه نکردیم.

04:43.310 --> 04:49.910
سرویس‌هایی مثل posts، comments، query همگی اضافه شدن ولی moderation هنوز نه.

04:49.910 --> 04:55.100
پس یکی از این خطوط رو کپی می‌کنم و فقط پورتش رو به 4003 تغییر می‌دم، چون سرویس moderation روی این پورت اجرا میشه.

04:55.100 --> 04:57.170
کارمون با این فایل تموم شد، ذخیره می‌کنیم و می‌بندیم.

04:58.070 --> 04:58.230
خب.

04:58.410 --> 05:00.570
فایل رو ذخیره می‌کنم و می‌بندم.

05:03.030 --> 05:04.590
اینجا یه توقف کوچیک داشته باشیم.

05:04.590 --> 05:10.060
تو ویدیوی بعدی قراره بررسی کنیم که وقتی event bus یک comment moderated رو دریافت کرد

05:10.230 --> 05:15.360
و اون رو برای سرویس comments فرستاد، سرویس comments بتونه اون رو دریافت کنه.

05:15.360 --> 05:16.890
داخل اون event، پراپرتی status رو بررسی کنیم،

05:17.550 --> 05:23.730
و وضعیت کامنت مربوطه رو با اون مقدار جدید آپدیت کنیم و در نهایت یک event جدید به اسم comment updated منتشر کنیم.

05:23.730 --> 05:26.820
پس هنوز یه مقدار کار باقی مونده.

05:27.210 --> 05:28.250
بریم سراغش تو ویدیوی بعد.