WEBVTT

00:01.020 --> 00:03.420
There's just two more components we need to create very quickly.

00:03.420 --> 00:07.260
We're going to get through these rather fast because they're really the same as two components we put

00:07.260 --> 00:08.310
together before.

00:08.400 --> 00:10.740
So we're going to make common create and comment list.

00:10.740 --> 00:11.610
Let's get to it.

00:11.610 --> 00:16.350
Well, first start with come and create back inside my editor for the React Project.

00:16.350 --> 00:22.230
I'm going to make a new file inside the CRC directory called Comment Create Dogs.

00:23.080 --> 00:24.910
Inside of here, we'll import React.

00:25.790 --> 00:26.630
Right away.

00:28.250 --> 00:32.330
And then create a new component and export it like so.

00:33.050 --> 00:36.260
And for right now, I'll just return once again an empty div.

00:38.510 --> 00:41.030
Now let's think about what Comet Create really needs to do.

00:41.180 --> 00:43.970
Come and Create is going to represent this form right here.

00:43.970 --> 00:47.720
So users going to type in some content for the comment and then click on Submit.

00:47.990 --> 00:53.540
The expectation is that we should take whatever content the user enters and make a post request off

00:53.540 --> 00:54.770
to our comment service.

00:55.130 --> 01:00.140
Now one thing I want to point out in particular is that whenever we create a comment, we have to know

01:00.140 --> 01:03.710
the ID of the post that we are associating that comment with.

01:04.070 --> 01:10.070
So inside of our comment create component, we need to know the post that this comment is going to be

01:10.070 --> 01:11.120
associated with.

01:11.330 --> 01:17.450
So long story short, whenever our post list or a post inside a post list.

01:18.190 --> 01:20.440
Is going to create a common create component.

01:20.440 --> 01:24.460
We need to pass down the ID of the post that it's going to be associated with.

01:24.490 --> 01:25.690
That's the long and short of it.

01:26.170 --> 01:30.280
So inside of Comet Create, we're going to assume that this thing is going to receive a prop.

01:30.280 --> 01:35.530
So we're going to receive some props right here that's going to contain something like post ID or something

01:35.530 --> 01:36.340
very similar.

01:36.760 --> 01:41.410
I don't really expect to receive any other props inside this thing, so I'm going to structure out just

01:41.410 --> 01:43.510
this post ID value.

01:44.490 --> 01:44.790
Okay.

01:44.790 --> 01:48.660
So we're not going to make use of post ID just yet, but I just want to talk about it right away just

01:48.660 --> 01:49.740
to make sure it's really clear.

01:49.740 --> 01:53.520
Yeah, we needed to know the ID of the post that we're going to associate this comment with.

01:54.240 --> 01:56.640
So now we can start to put together the rest of this component.

01:57.790 --> 01:58.450
To get started.

01:58.450 --> 02:00.550
Let's work on a little bit of mock markup.

02:01.660 --> 02:03.080
I'm going to expand this div.

02:05.220 --> 02:06.180
Inside there.

02:06.180 --> 02:10.290
We're going to want a form element because this thing is all about showing a form that the user is going

02:10.290 --> 02:16.350
to enter some text into inside that will place a div with the class name of form group.

02:17.940 --> 02:20.640
Inside that div will do an input.

02:21.840 --> 02:24.000
And right above that, let's do a label as well.

02:25.150 --> 02:25.750
On the label.

02:25.750 --> 02:28.510
I'll give it some text like how about new comment?

02:29.420 --> 02:30.470
On the input.

02:30.470 --> 02:32.270
Let's add in a class name there as well.

02:32.300 --> 02:37.010
I'll do form dash control, let in some event listeners and whatnot in just a moment.

02:37.220 --> 02:41.720
First, right outside of that closing div that we've got right there, I'm going to add in a button.

02:43.720 --> 02:45.070
That says submit.

02:46.010 --> 02:50.870
And I'll give it a class name as well of BTN Primary.

02:52.740 --> 02:53.000
Okay.

02:53.010 --> 02:54.030
So this is a good start.

02:54.390 --> 02:58.800
Now we need to make sure that we've got a piece of state that's going to track whatever value a user

02:58.800 --> 03:00.030
has inside this input.

03:00.060 --> 03:04.100
We need to make sure we've got an event handler on the form itself to watch for a summit event.

03:04.110 --> 03:08.190
And we need to make sure that we've got a function that's actually going to make a post request off

03:08.190 --> 03:12.060
to our comments microservice and attempt to persist the given comment.

03:13.010 --> 03:14.070
So let's get to it.

03:14.090 --> 03:15.470
Let's first add in.

03:16.780 --> 03:18.250
The U.S. state hook.

03:19.660 --> 03:23.010
We're going to create a new piece of state that's going to track whatever value the user has inside

03:23.020 --> 03:23.740
that input.

03:24.440 --> 03:27.380
So we'll say, how about content and set content?

03:28.950 --> 03:32.010
It's going to come from your state and we'll give it a default value of empty string.

03:33.080 --> 03:36.860
Then we can set up some event handlers and value centers on the input itself.

03:37.250 --> 03:40.160
So I'll say that this things value is going to be equal to content.

03:41.450 --> 03:43.940
And it's going to have an unchanged event listener.

03:44.940 --> 03:49.320
Whenever a user changes this input, we're going to receive an event which once again will abbreviate

03:49.320 --> 03:50.400
just as E!

03:51.430 --> 03:55.870
And we'll use that things target value property to update our content piece of state.

03:56.050 --> 03:59.440
We'll say set content e target value.

04:03.070 --> 04:03.340
Okay.

04:03.370 --> 04:04.150
That looks good.

04:04.780 --> 04:06.730
So now let's work on the form itself.

04:06.880 --> 04:09.220
We're going to add in and on Submit Listener.

04:09.700 --> 04:13.840
Once again, any time this thing gets submitted, we'll call a function that will call simply on submit.

04:15.220 --> 04:16.780
So let's define that function right away.

04:17.200 --> 04:22.390
So on submit is going to be an async function because we probably need to make a request inside of here.

04:23.450 --> 04:25.010
Because this is a form submission.

04:25.010 --> 04:29.870
Once again, we're going to receive that event object and call prevent default on it.

04:32.340 --> 04:38.910
And so now finally, right here is where we're going to want to take our content and the post ID and

04:38.910 --> 04:41.430
use them to make requests off to our comments.

04:41.430 --> 04:47.310
Microservice So let's make sure that we import Axios at the top so we can actually make that request.

04:51.250 --> 04:54.940
And then inside of here we'll do an await Axios dot post.

04:56.330 --> 05:01.010
It's going to be a post request because we want to create a new comment and then remember the path that

05:01.010 --> 05:02.840
we said that we were going to use for that microservice.

05:02.840 --> 05:08.120
We said that we were going to make a post request to posts slash the ID of the post.

05:08.120 --> 05:10.100
We care about slash comments.

05:10.160 --> 05:13.370
We were going to include a body of content and that was going to have a string.

05:15.180 --> 05:17.160
So inside of here we'll use a template string.

05:17.190 --> 05:21.210
Notice I'm using the back ticks and we'll say http colon, slash, slash.

05:22.100 --> 05:23.030
Local host.

05:23.030 --> 05:24.530
And then remember our comments.

05:24.530 --> 05:27.020
Microservice is at Port 4001.

05:27.980 --> 05:32.930
We'll do such posts and then we'll do some string templating here and put in our post ID, which we

05:32.930 --> 05:33.950
discussed a little bit ago.

05:33.950 --> 05:35.270
That's coming in as a prop.

05:36.600 --> 05:37.920
Slash comments.

05:39.660 --> 05:45.150
And we'll make sure that we provide the actual content inside the body of the request that's inside

05:45.150 --> 05:47.400
this object right here provided as the second argument.

05:47.400 --> 05:49.410
And we'll throw our content inside there.

05:50.560 --> 05:53.600
So that should create a new comment and associate it with a given post.

05:55.270 --> 05:59.950
Right after we make this request successfully, we're going to once again clear out the value of that

05:59.950 --> 06:00.620
input.

06:00.640 --> 06:05.350
So we're going to reset the inputs value back to an empty string just to make sure it's clear to a user

06:05.350 --> 06:07.510
that, hey, your comment has been persisted.

06:08.230 --> 06:11.260
Right after that, I'll do a set content of empty string.

06:14.600 --> 06:15.140
Yes, Alex.

06:15.140 --> 06:15.590
Good.

06:16.330 --> 06:19.480
Now, before we test this, we need to make sure we actually show this component somewhere.

06:19.870 --> 06:22.360
Remember, we want to show that component.

06:23.710 --> 06:25.120
Inside of our post list.

06:25.510 --> 06:31.450
Every single post that we display needs to have an instance of comment create displayed right underneath

06:31.450 --> 06:31.870
it.

06:32.140 --> 06:36.940
So we'll go into post list and find where we iterate over our list of posts to build out this list right

06:36.940 --> 06:37.390
here.

06:39.000 --> 06:41.670
So I will go back over to post listings.

06:42.820 --> 06:48.010
I'm going to scroll it to the very top and I will import post or semi comment create.

06:49.820 --> 06:51.170
From comment create.

06:54.500 --> 06:57.990
Well, then find where we mapped over all those posts.

06:58.010 --> 06:59.600
Here's the mapping statement right here.

07:01.060 --> 07:03.190
So this is where we display the title of the post.

07:03.190 --> 07:07.630
And as we just saw in our mockup, we want to display that form right underneath it.

07:08.200 --> 07:11.380
So right after that div or see me right after the H three my mistake.

07:11.380 --> 07:12.610
We want it to be inside the div.

07:12.610 --> 07:14.950
So it's got that card body class applied to it.

07:16.010 --> 07:20.840
We're going to display our comment rate component and we will make sure that we give it.

07:20.840 --> 07:24.110
It's a required property, which is the post ID.

07:25.320 --> 07:26.490
We'll say post ID.

07:27.380 --> 07:32.120
And we've got access to the post IDs via this post variable right here.

07:33.230 --> 07:35.510
So we'll pass in post ID.

07:37.750 --> 07:37.960
Okay.

07:37.990 --> 07:38.650
That should be it.

07:38.680 --> 07:39.760
Let's save this.

07:40.030 --> 07:45.580
We'll flip back over and once again, do a quick test so I can now see my comment creation form.

07:47.000 --> 07:50.930
I'll enter in a comment and then submit it.

07:51.530 --> 07:56.360
And with my network request tab open, I can see that that comment was created successfully.

07:59.200 --> 08:00.580
All right, so it looks pretty good.

08:00.610 --> 08:05.260
Now, the last thing we have to do here is just make sure we put together the comment list component.

08:06.080 --> 08:06.970
So quick pause.

08:06.990 --> 08:07.880
Work on that component.

08:07.880 --> 08:09.380
Finish it up in just a moment.
