WEBVTT

00:01.020 --> 00:03.420
فقط دو کامپوننت دیگه مونده که خیلی سریع باید بسازیم.

00:03.420 --> 00:07.260
خیلی سریع ازشون عبور می‌کنیم چون تقریباً مشابه دو کامپوننت قبلی هستن که قبلاً ساختیم.

00:07.260 --> 00:08.310
می‌خوایم CommentCreate و CommentList رو بسازیم.

00:08.400 --> 00:10.740
پس بریم سراغشون.

00:10.740 --> 00:11.610
شروع کنیم.

00:11.610 --> 00:16.350
اول با CommentCreate شروع می‌کنیم. برمی‌گردیم به ادیتور React.

00:16.350 --> 00:22.230
داخل دایرکتوری src یه فایل جدید به اسم CommentCreate.js می‌سازم.

00:23.080 --> 00:24.910
اینجا React رو ایمپورت می‌کنیم.

00:25.790 --> 00:26.630
همین اول کار.

00:28.250 --> 00:32.330
بعد یه کامپوننت جدید می‌سازیم و اکسپورتش می‌کنیم.

00:33.050 --> 00:36.260
فعلاً فقط یه div خالی برمی‌گردونیم.

00:38.510 --> 00:41.030
حالا بیایم فکر کنیم که CommentCreate دقیقاً قراره چی کار کنه.

00:41.180 --> 00:43.970
این کامپوننت در واقع فرم کامنت هست.

00:43.970 --> 00:47.720
کاربر قراره یه متنی برای کامنت وارد کنه و بعد روی دکمه Submit کلیک کنه.

00:47.990 --> 00:53.540
انتظار داریم که وقتی کاربر چیزی وارد کرد، یه درخواست POST به سرویس کامنت‌هامون ارسال بشه.

00:53.540 --> 00:54.770
به یه نکته مهم دقت کن:

00:55.130 --> 01:00.140
وقتی یه کامنت ساخته می‌شه، باید بدونیم این کامنت به کدوم پست تعلق داره.

01:00.140 --> 01:03.710
پس توی کامپوننت CommentCreate باید آی‌دی پستی که این کامنت براش ساخته می‌شه رو داشته باشیم.

01:04.070 --> 01:10.070
پس خلاصه‌اش اینکه، وقتی داخل PostList یا هر پستی بخوایم از CommentCreate استفاده کنیم،

01:10.070 --> 01:11.120
باید آی‌دی اون پست رو براش ارسال کنیم.

01:11.330 --> 01:17.450
این یعنی باید prop آی‌دی پست رو به این کامپوننت پاس بدیم.

01:18.190 --> 01:20.440
وقتی داریم CommentCreate رو داخل یه پست استفاده می‌کنیم،

01:20.440 --> 01:24.460
باید آی‌دی اون پست رو به عنوان prop براش بفرستیم.

01:24.490 --> 01:25.690
همین خلاصه‌اشه.

01:26.170 --> 01:30.280
پس داخل CommentCreate فرض می‌کنیم که این کامپوننت قراره یه prop دریافت کنه.

01:30.280 --> 01:35.530
یه prop که احتمالاً اسمش postId یا یه چیز شبیه به اینه.

01:35.530 --> 01:36.340
چیز خاص دیگه‌ای نیاز نداریم.

01:36.760 --> 01:41.410
برای همین فقط postId رو از props استخراج می‌کنم.

01:44.490 --> 01:44.790
خب.

01:44.790 --> 01:48.660
فعلاً قرار نیست از postId استفاده کنیم، فقط خواستم همین اول بهش اشاره کنم تا همه‌چیز واضح باشه.

01:48.660 --> 01:49.740
آره، ما باید بدونیم که این کامنت برای کدوم پست ثبت می‌شه.

01:54.240 --> 01:56.640
حالا می‌تونیم بقیه این کامپوننت رو بسازیم.

01:57.790 --> 01:58.450
برای شروع،

01:58.450 --> 02:00.550
بیایم یه مارک‌آپ ساده و اولیه بنویسیم.

02:01.660 --> 02:03.080
div رو گسترش می‌دم.

02:05.220 --> 02:06.180
داخلش،

02:06.180 --> 02:10.290
می‌خوایم یه المنت فرم قرار بدیم چون این کامپوننت قراره یه فرم نشون بده که کاربر توش متن وارد کنه.

02:10.290 --> 02:16.350
داخل فرم، یه div با کلاس form-group قرار می‌دیم.

02:17.940 --> 02:20.640
توی این div، یه input می‌ذاریم.

02:21.840 --> 02:24.000
و بالای input هم یه label قرار می‌دیم.

02:25.150 --> 02:25.750
برای label،

02:25.750 --> 02:28.510
یه متن مناسب مثل "کامنت جدید" می‌ذاریم.

02:29.420 --> 02:30.470
برای input،

02:30.470 --> 02:32.270
یه کلاس form-control اضافه می‌کنیم.

02:32.300 --> 02:37.010
تا چند لحظه دیگه براش event listener هم اضافه می‌کنیم.

02:37.220 --> 02:41.720
حالا بیرون از اون div، یه دکمه اضافه می‌کنم.

02:43.720 --> 02:45.070
متن دکمه: Submit

02:46.010 --> 02:50.870
و کلاسش هم BTN Primary باشه.

02:52.740 --> 02:53.000
خب.

02:53.010 --> 02:54.030
این یه شروع خوبه.

02:54.390 --> 02:58.800
حالا باید یه state تعریف کنیم تا مقدار داخل input رو نگه داره.

02:58.800 --> 03:00.030
باید برای فرم یه event handler تعریف کنیم که وقتی سابمیت شد، اجرا بشه.

03:00.060 --> 03:04.100
همچنین یه تابع نیاز داریم که یه درخواست POST بفرسته به میکروسرویس کامنت‌هامون

03:04.110 --> 03:08.190
و کامنت وارد شده رو ذخیره کنه.

03:08.190 --> 03:12.060
پس بریم سراغش.

03:13.010 --> 03:14.070
اولین قدم:

03:14.090 --> 03:15.470
استفاده از useState.

03:16.780 --> 03:18.250
هوک useState رو اضافه می‌کنیم.

03:19.660 --> 03:23.010
یه state جدید تعریف می‌کنیم که مقدار input کاربر رو نگه داره.

03:23.020 --> 03:23.740
اسمش رو می‌ذاریم content و setContent.

03:24.440 --> 03:27.380
از useState می‌گیریمش و مقدار اولیه‌اش رو خالی می‌ذاریم.

03:28.950 --> 03:32.010
حالا می‌ریم سراغ input و براش value و event handler مشخص می‌کنیم.

03:33.080 --> 03:36.860
value رو برابر می‌ذاریم با content.

03:37.250 --> 03:40.160
و یه onChange براش تعریف می‌کنیم.

03:41.450 --> 03:43.940
وقتی کاربر چیزی تایپ کنه، event رو می‌گیریم

03:44.940 --> 03:49.320
که دوباره به صورت خلاصه e صداش می‌زنیم.

03:49.320 --> 03:50.400
و مقدار داخل input رو

03:51.430 --> 03:55.870
با استفاده از e.target.value به content پاس می‌دیم تا state به‌روز بشه.

03:56.050 --> 03:59.440
یعنی می‌نویسیم: setContent(e.target.value)

04:03.070 --> 04:03.340
خب.

04:03.370 --> 04:04.150
به‌نظر خوب میاد.

04:04.780 --> 04:06.730
حالا بریم سراغ کار کردن روی خود فرم.

04:06.880 --> 04:09.220
قراره یه رویداد onSubmit به فرم اضافه کنیم.

04:09.700 --> 04:13.840
هر بار که فرم ارسال شد، یه تابع اجرا می‌شه که اسمش رو می‌ذاریم onSubmit.

04:15.220 --> 04:16.780
پس بیایم این تابع رو تعریف کنیم.

04:17.200 --> 04:22.390
تابع onSubmit رو به‌صورت async می‌نویسیم چون باید داخلش یه درخواست HTTP ارسال کنیم.

04:23.450 --> 04:25.010
چون این یه ارسال فرم هست،

04:25.010 --> 04:29.870
باید event رو بگیریم و preventDefault روش صدا بزنیم که از رفتار پیش‌فرض جلوگیری کنه.

04:32.340 --> 04:38.910
حالا اینجا جاییه که باید از متغیرهای content و postId استفاده کنیم

04:38.910 --> 04:41.430
و باهاشون یه درخواست به سرویس کامنت‌هامون ارسال کنیم.

04:41.430 --> 04:47.310
پس اول از همه باید Axios رو بالای فایل ایمپورت کنیم تا بتونیم درخواست HTTP بفرستیم.

04:51.250 --> 04:54.940
حالا اینجا از `await axios.post` استفاده می‌کنیم.

04:56.330 --> 05:01.010
چون می‌خوایم یه کامنت جدید بسازیم، باید از متد POST استفاده کنیم. حالا یادت بیاد که گفتیم:

05:01.010 --> 05:02.840
مسیر مورد نظر برای این میکروسرویس

05:02.840 --> 05:08.120
قراره باشه: posts/{postId}/comments

05:08.120 --> 05:10.100
و بدنه‌ی درخواست باید شامل `content` باشه

05:10.160 --> 05:13.370
که مقدارش یه رشته (string) هست.

05:15.180 --> 05:17.160
پس از template string استفاده می‌کنیم.

05:17.190 --> 05:21.210
با backtick می‌نویسیم: http://

05:22.100 --> 05:23.030
localhost

05:23.030 --> 05:24.530
و پورت سرویس کامنت‌هامون که هست:

05:24.530 --> 05:27.020
پورت 4001

05:27.980 --> 05:32.930
بعدش می‌نویسیم /posts و بعد با string interpolation آی‌دی پست رو می‌ذاریم

05:32.930 --> 05:33.950
که به‌صورت prop دریافت کردیم.

05:33.950 --> 05:35.270
و در نهایت /comments

05:36.600 --> 05:37.920
حالا توی بدنه‌ی درخواست

05:39.660 --> 05:45.150
یه آبجکت پاس می‌دیم که content رو به‌عنوان فیلدش داشته باشه. این پارامتر دوم متد POST هست

05:45.150 --> 05:47.400
و داخلش اطلاعاتی که می‌خوایم ذخیره بشن رو می‌فرستیم.

05:47.400 --> 05:49.410
حالا مقدار content رو داخل بدنه درخواست قرار می‌دیم.

05:50.560 --> 05:53.600
این کار باعث می‌شه یه کامنت جدید ایجاد بشه و به پست مشخص‌شده متصل بشه.

05:55.270 --> 05:59.950
بعد از اینکه درخواست با موفقیت انجام شد، مقدار input رو پاک می‌کنیم.

05:59.950 --> 06:00.620
یعنی ورودی رو خالی می‌کنیم

06:00.640 --> 06:05.350
تا به کاربر نشون بدیم که کامنتش با موفقیت ذخیره شده.

06:05.350 --> 06:07.510
برای این کار از setContent با مقدار رشته خالی استفاده می‌کنیم.

06:08.230 --> 06:11.260
یعنی بعد از درخواست، مقدار ورودی صفر می‌شه.

06:14.600 --> 06:15.140
خیلی خوب.

06:15.140 --> 06:15.590
تا اینجا عالیه.

06:16.330 --> 06:19.480
قبل از تست کردن، باید مطمئن بشیم که این کامپوننت واقعاً جایی نمایش داده می‌شه.

06:19.870 --> 06:22.360
یادت باشه که ما می‌خوایم این کامپوننتو نشون بدیم

06:23.710 --> 06:25.120
زیر هر پستی داخل PostList.

06:25.510 --> 06:31.450
یعنی هر پستی که رندر می‌شه، باید یه CommentCreate هم زیرش نمایش داده بشه.

06:31.450 --> 06:31.870
دقیقاً زیرش.

06:32.140 --> 06:36.940
پس می‌ریم سراغ فایل PostList و جایی که داریم پست‌ها رو map می‌کنیم پیدا می‌کنیم.

06:39.000 --> 06:41.670
برمی‌گردیم به فایل PostList.

06:42.820 --> 06:48.010
می‌ریم بالای فایل و کامپوننت CommentCreate رو ایمپورت می‌کنیم.

06:49.820 --> 06:51.170
از فایل comment-create.

06:54.500 --> 06:57.990
حالا جایی که پست‌ها رو map کردیم پیدا می‌کنیم.

06:58.010 --> 06:59.600
اینه قسمت map مربوط به پست‌ها.

07:01.060 --> 07:03.190
اینجا داریم عنوان پست رو نشون می‌دیم.

07:03.190 --> 07:07.630
و حالا طبق طرحی که ساختیم، فرم کامنت باید دقیقاً زیرش قرار بگیره.

07:08.200 --> 07:11.380
پس درست بعد از تگ h3، یا بهتر بگم، داخل div مربوطه

07:11.380 --> 07:12.610
تا همچنان استایل card-body حفظ بشه.

07:12.610 --> 07:14.950
کامپوننت CommentCreate رو قرار می‌دیم

07:16.010 --> 07:20.840
و پراپ لازم یعنی postId رو بهش می‌دیم.

07:20.840 --> 07:24.110
اسم prop رو می‌ذاریم postId.

07:25.320 --> 07:26.490
و مقدارش رو از post می‌گیریم

07:27.380 --> 07:32.120
که توی map بهش دسترسی داریم. پس مقدارش می‌شه post.id

07:33.230 --> 07:35.510
و به این شکل پاسش می‌دیم.

07:37.750 --> 07:37.960
خب.

07:37.990 --> 07:38.650
تمومه.

07:38.680 --> 07:39.760
فایل رو ذخیره می‌کنیم.

07:40.030 --> 07:45.580
برمی‌گردیم به مرورگر و یه تست سریع می‌زنیم. حالا می‌تونم فرم ساخت کامنت رو ببینم.

07:47.000 --> 07:50.930
یه کامنت وارد می‌کنم و ارسالش می‌کنم.

07:51.530 --> 07:56.360
با باز بودن تب Network، می‌بینم که درخواست با موفقیت انجام شده و کامنت ساخته شده.

07:59.200 --> 08:00.580
خیلی خوب به‌نظر می‌رسه.

08:00.610 --> 08:05.260
حالا فقط یه کار دیگه مونده: باید کامپوننت CommentList رو هم پیاده‌سازی کنیم.

08:06.080 --> 08:06.970
یه توقف کوچیک،

08:06.990 --> 08:07.880
می‌ریم سراغ اون کامپوننت

08:07.880 --> 08:09.380
و سریع تمومش می‌کنیم.