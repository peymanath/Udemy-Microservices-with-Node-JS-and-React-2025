WEBVTT

00:01.030 --> 00:03.960
توی این ویدیو قراره ساخت سرویس Query رو شروع کنیم.

00:03.970 --> 00:06.100
یادت باشه هدف این سرویس چیه:

00:06.100 --> 00:10.990
می‌خوایم یه سرویسی داشته باشیم که فقط با یه درخواست، لیست کامل پست‌ها همراه با کامنت‌هاشون رو بهمون بده.

00:10.990 --> 00:13.030
یعنی فقط با یه درخواست، کل اطلاعات لازم رو بگیریم.

00:13.240 --> 00:16.810
برای پیاده‌سازی این سرویس، قراره دو تا route handler تعریف کنیم.

00:16.810 --> 00:19.120
اولی، هندلریه که eventها رو از Event Bus دریافت می‌کنه.

00:19.330 --> 00:22.690
سرویس Query فقط به دو نوع event اهمیت می‌ده: `PostCreated` و `CommentCreated`

00:23.170 --> 00:27.940
هر وقت یکی از این eventها دریافت بشه، داده‌ی داخل اون رو می‌گیریم

00:27.940 --> 00:33.280
و اونو توی یه ساختار داده‌ای ساده و قابل دسترسی ذخیره می‌کنیم.

00:33.280 --> 00:36.460
اون ساختار تمام پست‌ها و کامنت‌های مربوطه رو شامل می‌شه.

00:37.260 --> 00:42.450
هندلر دوم، مربوط به endpointی هست که روی مسیر `/posts` تعریف می‌شه.

00:42.450 --> 00:43.760
هر وقت یه درخواست GET به این مسیر بیاد،

00:43.770 --> 00:48.210
ما لیست کامل پست‌ها به‌همراه کامنت‌هاشون رو برمی‌گردونیم.

00:50.190 --> 00:52.800
خب، بریم که شروع کنیم به ساخت سرویس Query.

00:54.080 --> 00:56.930
اول از همه، یه ترمینال جدید باز می‌کنم.

00:58.260 --> 00:59.600
اینم پنجره‌ی جدید ترمیناله.

00:59.610 --> 01:02.530
می‌رم به دایرکتوری root پروژه یعنی blog.

01:02.550 --> 01:04.620
جایی که همه‌ی سرویس‌هامون اونجا هستن.

01:05.070 --> 01:09.120
داخل اون، یه پوشه جدید به نام `query` می‌سازم.

01:10.460 --> 01:16.430
واردش می‌شم و بعد یه فایل `package.json` ایجاد می‌کنم با `npm init -y`.

01:19.240 --> 01:23.050
بعد از ساخت فایل، دو تا وابستگی نصب می‌کنیم:

01:23.560 --> 01:29.320
`express` و `cors`؛ چون این سرویس فقط قراره پاسخ بده و خودش هیچ eventی ارسال نمی‌کنه.

01:29.320 --> 01:32.920
واسه همین نیازی به نصب axios نداریم.

01:33.550 --> 01:37.810
من از قبل می‌دونم این سرویس قرار نیست event بفرسته.

01:37.810 --> 01:42.190
ولی اگه داشتی پروژه رو از صفر می‌ساختی و مطمئن نبودی، بهتر بود axios رو نصب کنی

01:42.190 --> 01:46.750
تا بعداً اگه دیدی لازم نیست، حذفش کنی.

01:50.930 --> 01:52.550
خب، این دو تا پکیج رو نصب کن.

01:53.450 --> 01:55.130
برمی‌گردم به ادیتور کد.

01:56.990 --> 01:59.150
باید پوشه‌ی `query` رو حالا اونجا ببینم.

02:00.160 --> 02:02.620
بریم سراغ ساخت اپلیکیشن express برای این سرویس.

02:03.500 --> 02:07.370
داخل پوشه‌ی query، یه فایل جدید به نام `index.js` می‌سازم.

02:08.380 --> 02:09.310
و در بالای فایل،

02:09.310 --> 02:10.090
بیاید شروع کنیم.

02:10.090 --> 02:14.530
قراره express، body-parser و پکیج cors رو import کنیم.

02:15.940 --> 02:17.110
express رو میارم،

02:19.420 --> 02:20.640
body-parser رو هم همینطور،

02:23.680 --> 02:25.480
و بعد cors رو هم اضافه می‌کنم.

02:27.540 --> 02:29.400
یه اپلیکیشن express جدید می‌سازم.

02:30.980 --> 02:33.440
و body-parser رو به اپ اضافه می‌کنم.

02:36.780 --> 02:38.430
و همچنین cors رو هم اضافه می‌کنم.

02:39.820 --> 02:40.000
خب،

02:40.090 --> 02:40.900
همه‌چیز درسته.

02:42.370 --> 02:44.920
حالا وقتشه دو تا route handler تعریف کنیم.

02:45.040 --> 02:50.290
یادت باشه این دوتا مربوط به GET `/posts` و POST `/events` هستن.

02:51.190 --> 02:53.650
اولی: `app.get('/posts', (req, res) => {})`

02:55.460 --> 02:57.770
فعلاً خالی می‌ذاریمش تا بعداً پرش کنیم.

02:58.340 --> 02:59.990
بعدی: `app.post('/events', (req, res) => {})`

03:00.380 --> 03:03.740
این همون endpointیه که قراره eventها رو از Event Bus دریافت کنه.

03:04.340 --> 03:08.180
در نهایت، پایین فایل اپ رو روی یه پورت مشخص راه‌اندازی می‌کنیم.

03:10.060 --> 03:12.310
از `app.listen` استفاده می‌کنیم.

03:12.490 --> 03:12.790
خب،

03:12.790 --> 03:13.300
می‌نویسیم:

03:13.840 --> 03:14.530
`app.listen(...)`

03:14.740 --> 03:15.390
مثلاً روی پورت 4002

03:15.400 --> 03:18.660
چون قبلاً پورت‌های 4000 و 4001 رو برای posts و comments استفاده کردیم.

03:18.670 --> 03:25.810
پس این یکی می‌ره روی 4002 که مربوط به سرویس query باشه.

03:30.600 --> 03:32.010
داخل callback یه log می‌نویسیم:

03:33.160 --> 03:33.670
`console.log('Listening on 4002')`

03:38.940 --> 03:42.810
قبل از اینکه بریم سراغ پیاده‌سازی handlerها، بیایم مطمئن بشیم که پروژه بدون خطا اجرا می‌شه.

03:42.810 --> 03:43.680
فایل رو ذخیره می‌کنم.

03:43.770 --> 03:45.090
و می‌رم سراغ package.json

03:45.450 --> 03:49.260
یه start script براش تعریف می‌کنم.

03:50.730 --> 03:51.390
راستی،

03:51.420 --> 03:53.340
فراموش کردیم nodemon رو نصب کنیم.

03:53.430 --> 03:55.440
الآن سریع نصبش می‌کنم.

03:55.800 --> 03:57.090
برمی‌گردم به ترمینال.

03:58.280 --> 04:00.200
دستور `npm install nodemon` رو اجرا می‌کنم.

04:03.930 --> 04:07.290
بعد از اینکه نصب شد، اسکریپت `start` رو آپدیت می‌کنم:

04:09.380 --> 04:14.030
`"start": "nodemon index.js"`

04:16.250 --> 04:20.420
حالا پروژه رو اجرا می‌کنم تا مطمئن بشم خطای تایپی یا مشکل دیگه‌ای نداریم.

04:20.810 --> 04:26.330
توی ترمینالی که مربوط به سرویس query هست، دستور `npm start` رو می‌زنم.

04:27.210 --> 04:27.920
و خب،

04:27.930 --> 04:29.430
می‌بینم که سرویس روی پورت 4002 اجرا شده.

04:31.050 --> 04:34.200
الآن که همه تنظیمات پایه‌ای انجام شده، می‌تونیم بریم سراغ پیاده‌سازی

04:34.200 --> 04:38.130
endpoint مربوط به `/events` و `/posts`.

04:38.490 --> 04:42.060
اول یه استراحت کوتاه می‌کنیم و بعد سراغشون می‌ریم.