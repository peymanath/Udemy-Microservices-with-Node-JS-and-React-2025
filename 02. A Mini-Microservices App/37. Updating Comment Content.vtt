WEBVTT

00:01.340 --> 00:06.020
در این ویدیو قراره مطمئن بشیم که سرویس نظرات منتظر دریافت رویداد "moderated comment" باشه.

00:06.320 --> 00:10.370
باید اطلاعاتی از کامنتی که به‌تازگی بررسی شده دریافت کنیم و نسخه‌ی محلی‌مون از اون کامنت رو به‌روز کنیم.

00:10.370 --> 00:12.770
یعنی وضعیت کامنت باید از حالت "در انتظار" به "تأیید شده" یا "رد شده" تغییر کنه.

00:12.770 --> 00:17.210
بنابراین وضعیت باید از حالت pending بره به approved یا rejected.

00:17.920 --> 00:22.450
دوباره یادآوری می‌کنم که درک دقیق ویژگی‌هایی که درون هر رویداد هست خیلی مهمه.

00:22.450 --> 00:24.490
به‌همین خاطر یه مقدار زمان گذاشتم و دقیق مستند کردم که توی رویداد comment moderated چی می‌گذره.

00:24.760 --> 00:28.780
رویداد comment moderated شامل id، content، postId و status هست. مقدار status هم یا approved هست یا rejected.

00:28.780 --> 00:35.440
این رویداد از سمت سرویس moderation منتشر میشه و ما اون رو در سرویس comments دریافت می‌کنیم.

00:35.440 --> 00:37.570
حالا بریم سرویس comments رو باز کنیم تا مطمئن بشیم که این رویداد رو دریافت می‌کنه و از فیلد به‌روز شده status استفاده می‌کنه.

00:38.970 --> 00:44.010
پس سرویس comments رو باز می‌کنم و مطمئن می‌شم که این event دریافت میشه و فیلد status به‌روزرسانی میشه.

00:44.310 --> 00:49.380
پس می‌رم سراغ فولدر comments و فایل index.js رو باز می‌کنم.

00:49.380 --> 00:49.950
داخلش...

00:51.720 --> 00:53.610
می‌رم پایین سمت handler مربوط به درخواست POST که قبلاً نوشتیمش برای هندل کردن رویدادهای دریافتی.

00:53.880 --> 00:55.560
اون‌جا ادامه می‌دیم.

00:56.760 --> 00:57.360
در این فایل...

00:57.360 --> 01:01.590
مثل قبل type و data رو از body درخواست استخراج می‌کنم.

01:04.070 --> 01:09.200
اگه type برابر با "CommentModerated" بود، یعنی باید یه کاری انجام بدیم.

01:10.540 --> 01:13.180
پس بررسی می‌کنم اگه type برابر با این مقدار بود، هندلش کنیم.

01:14.190 --> 01:15.780
CommentModerated

01:15.930 --> 01:18.210
در این صورت باید یه واکنشی نشون بدیم.

01:20.930 --> 01:25.670
اولین کاری که می‌کنم اینه که کامنتی که قبلاً ذخیره کردیم رو از ساختار داده commentsByPostId پیدا کنیم.

01:25.670 --> 01:29.030
باید اون کامنتی که مربوط به اون پست هست رو پیدا کنیم و مقدار statusش رو به‌روز کنیم.

01:29.060 --> 01:33.530
یعنی اون کامنت خاص رو که قبلاً داشتیم، پیدا کنیم و statusش رو تغییر بدیم.

01:38.200 --> 01:40.570
اول باید postId رو بگیریم.

01:41.470 --> 01:44.770
کل پراپرتی‌های data رو جدا می‌کنم چون احتمالاً قراره همشون رو استفاده کنیم.

01:44.770 --> 01:45.820
پس id، postId و status رو استخراج می‌کنم.

01:45.820 --> 01:48.820
یعنی id، postId و status رو از data می‌گیرم.

01:48.820 --> 01:53.530
بعد لیست کامنت‌های مربوط به اون postId رو دریافت می‌کنم.

01:55.690 --> 01:58.180
کامنت‌هایی که مربوط به اون postId هستن رو می‌گیریم.

01:59.030 --> 02:02.500
و می‌گیم comments برابر باشه با:

02:03.450 --> 02:07.230
commentsByPostId در postId مربوطه.

02:08.970 --> 02:13.620
بعد باید روی این آرایه از کامنت‌ها حلقه بزنیم و اون کامنت خاصی رو که می‌خوایم به‌روز کنیم پیدا کنیم.

02:15.810 --> 02:17.790
فرض کنیم کامنت مربوط به "Colin" هست.

02:20.350 --> 02:21.220
می‌ریم سراغ آرایه‌ی کامنت‌ها...

02:22.760 --> 02:23.540
و از تابع find استفاده می‌کنیم.

02:24.110 --> 02:26.120
تا اون کامنتی که دنبال‌ش هستیم رو پیدا کنیم.

02:28.460 --> 02:30.260
با ID که برابر باشه با...

02:31.430 --> 02:32.990
همون ID که از event دریافت کردیم.

02:33.470 --> 02:35.630
این همون کامنتیه که باید وضعیتش رو به‌روز کنیم.

02:37.800 --> 02:42.330
پس اون کامنت رو می‌گیریم و فیلد statusش رو با مقداری که از رویداد گرفتیم، جایگزین می‌کنیم.

02:44.690 --> 02:45.560
و همین کافیه.

02:45.920 --> 02:49.400
لازم نیست دوباره این کامنت رو داخل آرایه‌ی کامنت‌ها قرار بدیم یا چیزی شبیه به این،

02:49.400 --> 02:51.770
چون این آبجکت به صورت مرجع در حافظه یکیه.

02:51.770 --> 02:53.480
یعنی همون آبجکت داخل آرایه هست.

02:53.600 --> 02:57.830
پس عملاً نیاز به درج مجددش داخل آرایه نداریم.

02:58.930 --> 03:00.550
تا اینجا وضعیت کامنت رو به‌روزرسانی کردیم.

03:00.880 --> 03:05.650
حالا قدم بعدی اینه که به بقیه‌ی سرویس‌ها اطلاع بدیم که این به‌روزرسانی اتفاق افتاده.

03:05.650 --> 03:06.460
اینجاست که باید event جدیدی منتشر کنیم به اسم "comment updated".

03:06.700 --> 03:10.300
قراره این event رو منتشر کنیم.

03:12.560 --> 03:14.300
و این event از طریق event bus ارسال میشه.

03:15.150 --> 03:16.860
و دوباره مطمئن می‌شیم که سرویس Query اون رو دریافت می‌کنه.

03:17.100 --> 03:21.450
می‌ریم سراغ پیاده‌سازی این قسمت.

03:23.050 --> 03:26.980
قبل از اون، یه نگاهی هم بندازیم به مستندات مربوط به "comment updated" تا دقیق بدونیم چه اطلاعاتی باید توش باشه.

03:26.980 --> 03:28.870
می‌خوایم مطمئن بشیم که تمام پراپرتی‌ها کامل هستن.

03:30.090 --> 03:30.960
رویداد comment updated

03:30.960 --> 03:37.530
باید شامل id کامنت، متن (content)، postId و وضعیت (status) باشه.

03:37.530 --> 03:40.650
در این مرحله، status باید یکی از دو مقدار approved یا rejected باشه.

03:42.580 --> 03:45.760
پس بیایم این event رو آماده کنیم و بفرستیم به event bus.

03:47.530 --> 03:50.440
می‌نویسیم: await axios.post

03:51.240 --> 03:54.550
ارسال به آدرس http://localhost:4005

03:54.570 --> 03:56.670
نوع event هم قراره "CommentUpdated" باشه.

04:06.000 --> 04:12.000
و داده‌ای که باید بفرستیم دوباره شامل ID، content، postId و status به‌روزرسانی شده هست.

04:13.080 --> 04:20.040
برای ID می‌تونیم از سینتکس خلاصه استفاده کنیم چون قبلاً این مقادیر رو داریم: ID، postId، status و البته خود کامنت هم هست.

04:20.040 --> 04:22.110
بنابراین content رو هم اضافه می‌کنیم.

04:23.230 --> 04:24.280
یا همون content کامنت.

04:26.830 --> 04:28.150
پس ID رو می‌گیریم،

04:29.410 --> 04:35.560
status به‌روزرسانی‌شده، postId که این کامنت به اون مربوطه، و محتوای کامنت (content) رو هم اضافه می‌کنیم.

04:39.340 --> 04:43.600
چون داریم از async/await استفاده می‌کنیم، باید تابعی که این دستور توش قرار داره رو هم با async مشخص کنیم.

04:43.600 --> 04:44.320
و همین کافیه.

04:45.280 --> 04:46.270
تا اینجا کار تمومه.

04:47.430 --> 04:54.500
آخرین کاری که باید بکنیم اینه که بریم سرویس Query رو باز کنیم و مطمئن بشیم که event مربوط به "comment updated" رو دریافت می‌کنه.

04:54.500 --> 04:55.160
این آخرین مرحله‌ست.

04:55.490 --> 04:56.600
یه توقف کوتاه می‌کنیم.

04:56.600 --> 04:58.190
تا لحظاتی دیگه اون بخش رو هم انجام می‌دیم.
