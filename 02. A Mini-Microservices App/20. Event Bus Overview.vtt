WEBVTT

00:01.040 --> 00:04.370
تو چند ویدیوی اخیر فقط داشتم پشت‌سر‌هم درس می‌دادم.

00:04.370 --> 00:05.660
می‌دونم خیلی خسته‌کننده‌ست.

00:05.660 --> 00:08.270
فقط یه جلسه دیگه مونده، بعدش دوباره می‌ریم سراغ کدنویسی.

00:08.660 --> 00:11.870
توی این ویدیو قراره طراحی Event Bus رو بررسی کنیم.

00:11.870 --> 00:16.430
می‌خوایم ببینیم چطوری می‌تونیم از Event Bus برای انتقال Event بین سرویس‌ها استفاده کنیم.

00:16.430 --> 00:16.970
از یه سرویس به سرویس دیگه.

00:17.390 --> 00:22.580
یادت باشه، هدف ما اینه که تا جای ممکن همه‌چی رو خودمون از صفر پیاده‌سازی کنیم

00:22.580 --> 00:24.650
و از ابزارهای آماده استفاده نکنیم.

00:24.650 --> 00:26.270
Event Bus هم شامل میشه.

00:26.270 --> 00:28.340
پس می‌خوایم Event Bus رو خودمون بسازیم.

00:28.340 --> 00:31.070
با استفاده از JavaScript و Express.

00:31.110 --> 00:33.560
می‌خوام چند نکته مهم درباره نحوه عملکردش بگم.

00:34.660 --> 00:35.020
خب

00:35.020 --> 00:36.340
Event Bus چیه؟

00:36.550 --> 00:40.720
اول از همه باید بدونی که پیاده‌سازی‌های مختلفی برای Event Bus وجود داره.

00:40.960 --> 00:45.580
شاید اسم‌هایی مثل RabbitMQ، Kafka یا NATS رو شنیده باشی.

00:45.850 --> 00:47.980
اینا همه انواع مختلف Event Bus هستن.

00:47.980 --> 00:49.420
پروژه‌های متن‌بازن.

00:49.420 --> 00:54.550
می‌تونی خودت دانلود و اجراشون کنی یا از نسخه‌های میزبانی‌شده آماده‌شون استفاده کنی.

00:55.910 --> 01:00.740
نکته مشترک بین همه این Event Bus‌ها اینه که یه سری Event می‌گیرن و اون‌ها رو برای شنونده‌ها ارسال می‌کنن.

01:00.740 --> 01:02.540
یعنی Publish می‌کنن.

01:03.360 --> 01:07.180
وقتی از Event حرف می‌زنیم، منظورمون یه قطعه اطلاعاته.

01:07.200 --> 01:10.320
هیچ ساختار ثابتی برای شکل Event وجود نداره.

01:10.350 --> 01:17.010
می‌تونه JSON باشه، یا یه رشته ساده، یا حتی داده خام؛ هرچی که بخوای بین سرویس‌هات به اشتراک بذاری.

01:18.990 --> 01:23.730
و وقتی از Listener حرف می‌زنیم، منظور سرویس‌هایی هستن که به این Event‌ها گوش می‌دن.

01:23.730 --> 01:24.690
یعنی منتظرشونن.

01:26.370 --> 01:31.920
بین این پیاده‌سازی‌های مختلف مثل RabbitMQ، Kafka، NATS و غیره، تفاوت‌های کوچیکی وجود داره

01:31.920 --> 01:37.110
که بعضی ویژگی‌ها رو ساده‌تر می‌کنه و بعضی‌ها رو پیچیده‌تر.

01:37.110 --> 01:41.160
برای پروژه بزرگ‌تری که قراره تو نیمه دوم این دوره پیاده‌سازی کنیم،

01:41.610 --> 01:45.840
من Event Busی رو انتخاب کردم که خیلی راحت قابل راه‌اندازیه و سرعتش هم بالاست.

01:45.840 --> 01:50.710
ولی یه سری نقاط‌ضعف داره که ممکنه یه‌خورده کارمون رو سخت کنه.

01:55.170 --> 01:56.190
و این موضوع پیاده‌سازی رو پیچیده‌تر می‌کنه.

01:56.490 --> 02:00.830
پس باید بدونی که نمی‌تونی یه پیاده‌سازی آماده از رو قفسه برداری و بری جلو.

02:00.840 --> 02:04.200
باید دقیق بررسی‌شون کنی و بفهمی که هرکدوم چی بهت می‌دن.

02:05.010 --> 02:08.220
حالا ما می‌خوایم Event Bus خودمون رو با Express بسازیم.

02:08.250 --> 02:15.510
ولی دقت کن، چیزی که ما می‌سازیم خیلی ابتدایی و ساده‌ست و تقریباً هیچ‌کدوم از قابلیت‌های حرفه‌ای Event Busهای واقعی رو نداره.

02:15.510 --> 02:21.540
کاملاً ساده‌ست و خارج از این پروژه، کاربرد خاصی هم نداره.

02:21.540 --> 02:22.860
ولی هدف ما چیز دیگه‌ایه.

02:23.040 --> 02:24.690
می‌خوایم همه‌چیز رو از پایه درک کنیم.

02:24.690 --> 02:28.170
که بفهمی پشت پرده‌ی Event Busها واقعاً چی می‌گذره.

02:28.560 --> 02:32.100
بعدش توی پروژه واقعی بعدی که بزرگ‌تر هم هست،

02:32.100 --> 02:35.010
می‌ریم سراغ استفاده از یه Event Bus حرفه‌ای و واقعی.

02:35.010 --> 02:39.810
یه Event Bus که توی پروژه‌های بزرگ واقعی و دیپلوی شده استفاده می‌شه.

02:39.810 --> 02:43.680
پس قراره هم تجربه آموزشی داشته باشی، هم تجربه عملی با ابزارهای جدی.

02:45.070 --> 02:45.430
خب

02:45.430 --> 02:49.570
بیایم درباره Event Bus ساده‌ای که قراره با Express بسازیم صحبت کنیم.

02:49.840 --> 02:53.770
این پیاده‌سازی واقعاً خیلی ساده‌ست و خیلی ابتدایی حساب میشه.

02:53.800 --> 02:58.600
فقط می‌خوایم بفهمیم جریان داده‌ها توی سیستم ما چطور جابجا می‌شن.

02:58.600 --> 03:02.950
و بتونیم مسیر عبور اطلاعات رو به صورت شفاف ببینیم.

03:03.550 --> 03:05.590
پس بذار بگم این قراره چطور کار کنه.

03:06.340 --> 03:10.810
قراره توی سرویس post و comment یه مسیر (route) جدید اضافه کنیم.

03:10.840 --> 03:14.170
و حتی توی query service هم همین مسیر رو خواهیم داشت.

03:14.680 --> 03:19.180
این مسیرها قراره روی آدرس POST /events گوش بدن.

03:19.420 --> 03:21.610
الان هدف این مسیرها رو هم بهت می‌گم.

03:22.380 --> 03:26.190
یه جاهایی از برنامه، مثلاً موقع ساختن پست یا کامنت،

03:26.190 --> 03:28.440
اون سرویس باید یه Event منتشر کنه.

03:28.800 --> 03:34.290
وقتی یه سرویس بخواد Event منتشر کنه، یه درخواست POST به Event Bus ما می‌فرسته.

03:34.290 --> 03:36.120
همونی که با هم قراره بسازیم.

03:36.390 --> 03:40.290
و این Event Bus درواقع یه اپلیکیشن ساده‌ی Express خواهد بود.

03:40.500 --> 03:44.460
یعنی عملاً داریم یه POST ساده از یه سرویس به یه سرویس دیگه می‌فرستیم.

03:45.970 --> 03:49.510
تو این درخواست POST، بدنه‌ی درخواست شامل اطلاعات اون event میشه.

03:49.660 --> 03:53.020
یعنی یه آبجکت جاوااسکریپتی که مشخص‌کننده اون رویداده.

03:53.820 --> 03:56.400
Event Bus این داده رو دریافت می‌کنه.

03:56.780 --> 04:01.140
و همون داده رو با چند درخواست POST جدا به سرویس‌های دیگه می‌فرسته.

04:01.730 --> 04:07.460
یعنی میاد همین اطلاعات رو به آدرس localhost:4000/events می‌فرسته — سرویس پست.

04:07.460 --> 04:12.040
و یه درخواست دیگه می‌فرسته به localhost:4001/events — سرویس کامنت.

04:12.090 --> 04:13.370
و همین‌طور برای 4002/events هم.

04:23.600 --> 04:27.290
یعنی توی هر سه درخواست POST که می‌فرسته، همون داده‌ی event رو همراهش ارسال می‌کنه.

04:28.010 --> 04:34.070
خلاصه‌اش اینه: هر وقت یکی از سرویس‌های ما یه درخواست POST به Event Bus بفرسته، Event Bus اون اطلاعات رو می‌گیره

04:34.070 --> 04:38.460
و عین همون داده رو برای همه‌ی سرویس‌های دیگه‌ی برنامه ارسال می‌کنه.

04:38.460 --> 04:39.350
حتی برای همون سرویسی که خودش Event رو فرستاده.

04:39.440 --> 04:42.740
یعنی به خودش هم برمی‌گردونه.

04:44.070 --> 04:44.720
و خب، همینه.

04:44.730 --> 04:47.220
این‌قدر ساده‌ست Event Bus ما.

04:47.310 --> 04:51.870
البته وقتی بعداً از ابزارهای حرفه‌ای‌تر و آماده‌تر استفاده کنیم، متوجه می‌شی که اون‌ها قابلیت‌های خیلی بیشتری دارن.

04:51.870 --> 04:55.260
ولی در نهایت، اصل ماجرا همینه.

04:55.260 --> 04:58.160
یه Event فرستاده میشه به Event Bus،

04:58.170 --> 05:01.200
و اونم عینش رو برای بقیه سرویس‌ها Broadcast می‌کنه.

05:01.230 --> 05:05.100
یعنی Event Bus فقط یه توزیع‌کننده‌ست، پیام رو می‌گیره و به همه می‌فرسته.

05:06.600 --> 05:09.100
خب، حالا که کاملاً فهمیدیم چی قراره بشه، یه وقفه‌ی کوتاه می‌گیریم.

05:09.150 --> 05:12.860
و توی ویدیوی بعدی شروع می‌کنیم به ساختن این Event Bus ساده، مرحله‌به‌مرحله و خیلی شفاف.
