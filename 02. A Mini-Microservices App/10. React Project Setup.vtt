WEBVTT

00:00.790 --> 00:05.080
الان دیگه هر دو سرویس ما آماده‌ هستن، پس وقتشه بریم سراغ اپلیکیشن Reactمون.

00:05.260 --> 00:06.540
یه نکته سریع قبلش.

00:06.550 --> 00:07.570
اگه React بلد نیستی یا علاقه‌ای نداری باهاش کار کنی، هیچ مشکلی نیست.

00:07.690 --> 00:11.710
می‌تونی ویدیوهای مربوط به React رو رد کنی و نسخه کامل‌شده‌ی پروژه React رو بعداً دانلود کنی.

00:11.710 --> 00:16.030
در یک‌جای خاصی از پروژه قراره کمی کد React رو دستکاری کنیم، ولی مقدارش خیلی کمه و اذیت‌کننده نیست.

00:19.120 --> 00:23.320
با این توضیحات، بریم سراغ شروع پروژه.

00:23.320 --> 00:36.350
اولین کاری که می‌خوایم انجام بدیم، طراحی سلسله‌مراتب کامپوننت‌ها برای اپ React هست.

00:36.680 --> 00:38.690
سمت چپ یه نمونه ظاهر (mockup) از اپلیکیشن داریم.

00:38.690 --> 00:42.680
سمت راست ساختار کامپوننت‌هایی که می‌خوایم پیاده‌سازی کنیم رو می‌بینی.

00:43.130 --> 00:48.950
در بالا، یک `App` کامپوننت اصلی داریم. زیر اون یک `PostCreate` داریم.

00:49.100 --> 00:53.150
کامپوننت `PostCreate` همون فرم بالای صفحه رو نشون می‌ده که برای ایجاد پسته.

00:54.450 --> 00:56.730
بعدش `PostList` داریم.

00:57.060 --> 01:00.390
این کامپوننت مسئول نمایش پست‌هاست — یعنی کل قسمت پایین صفحه.

01:01.180 --> 01:04.780
هر پست خودش شامل دو کامپوننت دیگه‌ست:

01:05.110 --> 01:09.610
`CommentList` برای نمایش لیست کامنت‌ها و `CommentCreate` برای ساخت کامنت جدید.

01:10.840 --> 01:15.280
`CommentList` لیست کامنت‌های مربوط به هر پست رو نشون می‌ده — می‌تونه یکی، پنج تا یا بیست‌تا باشه.

01:16.180 --> 01:20.170
و `CommentCreate` هم فرمیه که کاربر باهاش یه کامنت جدید ثبت می‌کنه.

01:27.880 --> 01:32.890
خلاصه، این طراحی کلی کامپوننت‌های ماست.

01:34.110 --> 01:35.760
بریم سراغ ترمینال و شروع کنیم به پیاده‌سازی.

01:35.820 --> 01:37.860
داخل دایرکتوری پروژه React می‌ریم.

01:37.890 --> 01:41.500
کد ادیتور رو اونجا باز می‌کنم.

01:41.520 --> 01:46.110
و حالا برای شروع، چند مورد نصب اولیه انجام می‌دیم.

01:47.740 --> 01:49.570
دوباره برمی‌گردم به ترمینال.

01:50.050 --> 01:52.110
دایرکتوری پروژه من `client` هست.

01:52.120 --> 01:54.190
اونجا کد ادیتور رو باز می‌کنم.

01:58.270 --> 01:59.980
و حالا وقت نصب پکیج‌هاست.

02:00.460 --> 02:02.620
می‌خوایم پکیج `axios` رو نصب کنیم تا بتونیم به API‌هامون درخواست ارسال کنیم.

02:02.620 --> 02:07.720
پس دستور `npm install axios` رو می‌زنم.

02:08.320 --> 02:10.000
و بعد از نصب کامل، با `npm start` پروژه رو اجرا می‌کنم.

02:18.850 --> 02:19.530
بزن بریم.

02:19.540 --> 02:20.230
بزن بریم.

02:21.240 --> 02:21.750
شروع شد.

02:21.750 --> 02:22.920
پس استارت شد.

02:23.990 --> 02:24.320
خوبه.

02:24.320 --> 02:27.870
حالا اپلیکیشن React ما قراره روی پورت 3000 بالا بیاد.

02:27.890 --> 02:28.160
بله.

02:28.160 --> 02:29.090
داره اجرا میشه.

02:30.510 --> 02:30.870
خیلی خب.

02:30.870 --> 02:34.350
حالا ادیتورم رو باز می‌کنم و می‌رم داخل دایرکتوری پروژه React.

02:34.370 --> 02:38.550
مطمئن شو که داخل فولدر `client` هستی، بعد برو سراغ پوشه‌ی `src`.

02:38.550 --> 02:43.530
و حالا کل محتویات داخل `src` رو حذف کن.

02:45.770 --> 02:49.840
علتش اینه که گاهی اوقات قالب پیش‌فرض React کمی تغییر می‌کنه و کدهای زیادی تولید میشه که نیاز نداریم.

02:49.850 --> 02:53.990
پس بهتره از صفر شروع کنیم تا راحت‌تر کنترل داشته باشیم.

02:53.990 --> 02:55.250
پس از صفر شروع می‌کنیم.

02:55.730 --> 03:00.380
حالا داخل پوشه `src`، یه فایل به اسم `index.js` می‌سازم.

03:01.890 --> 03:03.330
و یه فایل دیگه به اسم `App.js`.

03:04.080 --> 03:05.910
فایل `App.js` قراره کامپوننت اصلی ما باشه.

03:06.670 --> 03:10.180
توی اون فایل کامپوننت `App` رو تعریف می‌کنیم.

03:10.330 --> 03:12.070
و بعد میاریمش داخل فایل `index.js`.

03:12.220 --> 03:18.160
تا اون رو داخل یه DOM element واقعی (مثلاً div با id root) رندر کنیم.

03:19.890 --> 03:21.700
بیاید اول بریم سراغ فایل `index.js`.

03:21.810 --> 03:25.380
در بالای فایل، ابتدا React رو ایمپورت می‌کنم از پکیج `react`.

03:26.420 --> 03:28.310
حالا می‌خوایم export default رو بنویسیم.

03:30.590 --> 03:37.640
فعلاً فقط یه div برمی‌گردونیم که داخلش بنویسیم "Blog App" یا حتی "Post App" هم میشه، فرق خاصی نداره.

03:37.670 --> 03:38.870
اسمش مهم نیست، موقتیه.

03:39.410 --> 03:40.580
فایل رو ذخیره می‌کنم.

03:41.990 --> 03:45.230
برمی‌گردم به فایل index.js که قبلاً ساختیم.

03:46.570 --> 03:49.510
اینجا هم React رو ایمپورت می‌کنم از `react`.

03:50.580 --> 03:51.210
و ReactDOM

03:51.210 --> 03:52.860
از `react-dom`.

03:53.020 --> 03:55.770
بعد کامپوننت App رو هم ایمپورت می‌کنم.

03:57.900 --> 04:00.600
در نهایت با استفاده از `ReactDOM.render` می‌خوام اپ رو رندر کنم.

04:02.560 --> 04:04.940
یه نمونه از App رو نشون می‌دیم.

04:04.960 --> 04:08.830
و اون رو داخل فایل HTML اصلی که داریم قرار می‌دیم.

04:09.060 --> 04:13.030
اگه بری داخل فولدر `public` و فایل index.html رو باز کنی، می‌بینی یه div با id به اسم root هست.

04:13.920 --> 04:17.670
که معمولاً ما کامپوننت اصلی‌مون رو اونجا رندر می‌کنیم.

04:17.670 --> 04:18.930
همون رو به عنوان آرگومان دوم می‌دیم به `render`.

04:19.610 --> 04:23.450
پس آرگومان دوم `ReactDOM.render` می‌شه `document.getElementById('root')`.

04:26.940 --> 04:29.010
مثل این چیزی که الان نوشتم.

04:30.850 --> 04:31.810
فایل رو ذخیره می‌کنیم.

04:33.150 --> 04:35.280
و حالا برمی‌گردیم به مرورگر.

04:36.110 --> 04:37.370
صفحه رو رفرش می‌کنم.

04:37.420 --> 04:41.450
به نظر می‌رسه سرور کرش کرده چون فایل قبلی رو حذف کردیم.

04:41.480 --> 04:42.090
مشکلی نیست.

04:42.250 --> 04:45.140
برمی‌گردم به ترمینال و سرور رو دوباره استارت می‌زنم.

04:47.550 --> 04:49.080
وقتی سرور دوباره بالا اومد...

04:49.850 --> 04:50.430
بفرما...

04:50.450 --> 04:51.170
Blog App ظاهر شد!

04:51.710 --> 04:52.070
خوبه!

04:52.070 --> 04:53.300
شروع خوبی داشتیم.

04:53.300 --> 04:55.520
ولی هنوز کلی کامپوننت داریم که باید اضافه کنیم.

04:55.520 --> 04:56.510
پس یه توقف کوتاه.

04:56.510 --> 04:59.750
و بعد بریم سراغ ساختن ساختار کامل کامپوننت‌هامون.
