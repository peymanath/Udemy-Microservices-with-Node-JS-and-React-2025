WEBVTT

00:00.960 --> 00:02.550
سرویس کامنت ما به طور کامل آماده‌ست.

00:02.550 --> 00:05.100
پس بیاید خیلی سریع با استفاده از Postman یک تست انجام بدیم.

00:05.190 --> 00:07.320
می‌رم به ترمینال تا کارمون رو شروع کنیم.

00:07.560 --> 00:13.590
ترمینالی رو باز می‌کنم که داخل پوشه‌ی پروژه‌ی comments هست و دستور `npm start` رو اجرا می‌کنم.

00:15.140 --> 00:20.180
حالا یادتون باشه که الان دو سرویس جداگانه روی سیستم ما در حال اجراست، یعنی دو اپلیکیشن express.

00:20.180 --> 00:21.310
یکی روی پورت 4000.

00:21.320 --> 00:23.210
و اون یکی روی پورت 4001 اجرا میشه.

00:23.360 --> 00:31.670
پس اگر بخوایم با سرویس کامنت ارتباط بگیریم، باید ریکوئستی به `localhost:4001` بفرستیم.

00:32.430 --> 00:32.760
خب،

00:32.760 --> 00:35.730
الان که سرور اجرا شده، بریم سراغ Postman.

00:37.340 --> 00:39.980
یک تب جدید برای درخواست باز می‌کنم.

00:40.800 --> 00:45.510
نوع درخواست رو روی POST قرار می‌دم چون می‌خوایم یک کامنت ایجاد کنیم.

00:45.990 --> 00:52.500
آدرس `http://localhost:4001` رو وارد می‌کنم چون قراره به سرویس کامنت وصل بشیم.

00:54.230 --> 00:56.540
و مسیر درخواست رو می‌ذارم `/posts`

00:56.840 --> 00:59.420
و بعدش ID پستی که می‌خوایم براش کامنت بذاریم.

00:59.450 --> 01:04.850
سرویس کامنت فعلاً نمی‌دونه که چه IDهایی معتبر هستند، پس می‌تونیم هر ID دلخواهی بدیم.

01:04.850 --> 01:08.780
مثلاً من می‌نویسم `123`، که فرض می‌کنیم این ID مربوط به یه پست هست.

01:08.780 --> 01:10.610
و در نهایت `/comments` رو هم اضافه می‌کنیم.

01:18.500 --> 01:19.900
حالا می‌ریم سراغ تب Headers.

01:19.910 --> 01:24.920
اونجا یه Content-Type با مقدار `application/json` وارد می‌کنیم.

01:27.230 --> 01:28.280
بعدش می‌ریم به بخش Body.

01:28.910 --> 01:30.140
گزینه‌ی RAW رو انتخاب می‌کنیم.

01:30.620 --> 01:33.200
و مطمئن می‌شیم که حالت JSON رو انتخاب کردیم.

01:34.110 --> 01:36.690
حالا یه JSON می‌نویسیم برای ارسال.

01:36.990 --> 01:40.860
یادتون باشه که کامنت باید خاصیت `content` داشته باشه.

01:41.430 --> 01:45.750
پس مثلاً می‌نویسیم: `"content": "من یک کامنت هستم"`

01:47.150 --> 01:48.830
حالا دکمه‌ی Send رو می‌زنیم تا درخواست ارسال بشه.

01:50.520 --> 01:51.340
و تمام.

01:51.360 --> 01:52.990
کد 201 دریافت کردیم که یعنی کامنت با موفقیت ساخته شد.

01:53.010 --> 01:59.100
توجه کنید که توی پاسخ، یک آرایه از کامنت‌ها داریم که ظاهراً مربوط به پستی با ID برابر با 123 هست.

01:59.100 --> 02:01.380
پس تا اینجا همه چیز درست پیش رفته.

02:02.160 --> 02:03.000
خب خیلی خوبه.

02:03.570 --> 02:07.290
حالا بیایم مطمئن بشیم که می‌تونیم کامنت‌های مربوط به یک پست خاص رو هم دریافت کنیم.

02:09.850 --> 02:11.890
یک تب جدید برای درخواست باز می‌کنم.

02:12.730 --> 02:15.970
این بار نوع درخواست رو روی GET قرار می‌دم.

02:16.700 --> 02:23.580
آدرس رو وارد می‌کنم: `http://localhost:4001/posts/123/comments`

02:26.190 --> 02:29.700
بعد می‌ریم به تب Headers و دوباره Content-Type رو می‌ذاریم

02:33.130 --> 02:35.260
روی `application/json`

02:36.820 --> 02:39.550
چون داریم درخواست GET می‌زنیم نیازی به body نیست.

02:39.580 --> 02:44.740
دکمه Send رو می‌زنم. یک پاسخ با وضعیت 200 می‌گیرم و آرایه‌ی کامنت‌هام رو اینجا می‌بینم.

02:45.250 --> 02:46.690
برای اطمینان بیشتر،

02:46.720 --> 02:48.340
بیایم یک کامنت دیگه اضافه کنیم.

02:48.340 --> 02:51.160
تا مطمئن بشیم که کامنت‌های قبلی پاک نمی‌شن و همه باقی می‌مونن.

02:51.580 --> 02:54.460
برمی‌گردم به تب POST قبلی که زده بودیم.

02:55.790 --> 02:59.210
مقدار content رو عوض می‌کنم به `second comment`

03:01.350 --> 03:02.370
و Send رو می‌زنم.

03:03.000 --> 03:05.670
می‌بینم که در پاسخ، حالا دو تا کامنت داریم.

03:05.670 --> 03:08.040
یکی "I am a comment" و یکی "second comment".

03:08.940 --> 03:12.180
حالا اگه دوباره تب GET رو بزنم و درخواست رو ارسال کنم،

03:12.390 --> 03:13.600
بله، هر دو کامنت اونجا هستن.

03:13.620 --> 03:14.310
خیلی خوبه.

03:14.970 --> 03:15.300
خب،

03:15.300 --> 03:19.810
اینم از تست اولیه‌ی ساده برای express و سرویس کامنت.

03:20.930 --> 03:25.400
این ساده‌ترین مدلیه که ما از express استفاده کردیم و دیگه بیشتر از این نمی‌نویسیم برای این بخش.

03:26.140 --> 03:27.120
پس الان یک توقف کوتاه داریم.

03:27.130 --> 03:30.570
توی ویدیوی بعدی می‌ریم سراغ ساختن اپلیکیشن React.

03:30.580 --> 03:36.250
و وقتی اون رو بسازیم، خیلی سریع متوجه می‌شیم که مشکلات بزرگی توی طراحی فعلیمون وجود داره.

03:36.250 --> 03:38.620
یه سری مسائل پنهان و اذیت‌کننده هستن اینجا.

03:38.620 --> 03:41.950
نه که خیلی فاجعه باشن، ولی بهینه و درست هم نیستن.

03:41.980 --> 03:45.220
پس بریم React اپمون رو راه بندازیم.

03:45.580 --> 03:47.620
بعدش این مشکلات رو بررسی می‌کنیم

03:47.620 --> 03:51.460
و می‌بینیم که چطور می‌شه با معماری microservices این مسائل رو حل کرد.

03:51.460 --> 03:55.600
پس یه استراحت کوتاه، و خیلی زود برمی‌گردیم.س