WEBVTT

00:00.960 --> 00:04.170
توی ویدیوی قبلی، مزایا و معایب گزینه‌ی سوم رو بررسی کردیم.

00:04.170 --> 00:06.360
و در نهایت تصمیم گرفتیم از همین گزینه استفاده کنیم.

00:06.390 --> 00:10.830
برای پیاده‌سازی کامل این جریان، باید توی چند بخش مختلف تغییرات زیادی اعمال کنیم.

00:10.830 --> 00:14.190
باید سرویس Comment و سرویس Query رو ویرایش کنیم.

00:14.340 --> 00:17.370
و همچنین باید سرویس جدیدی به نام Moderation بسازیم.

00:17.520 --> 00:21.020
فعلاً از سرویس Moderation شروع می‌کنیم چون نقطه‌ی خوبی برای آغاز کاره.

00:21.030 --> 00:22.440
توی این ویدیو فقط قراره

00:22.680 --> 00:26.340
ساختار اولیه و فایل‌های پایه‌ی این پروژه رو آماده کنیم.

00:26.340 --> 00:31.200
و توی ویدیوی بعدی، منطق رو بهش اضافه می‌کنیم و eventهای لازم رو هندل می‌کنیم.

00:32.820 --> 00:33.670
خب بریم سراغش.

00:33.690 --> 00:36.030
می‌خوایم سرویس moderation رو ایجاد کنیم.

00:36.510 --> 00:38.700
برای شروع، برمی‌گردم به ترمینال.

00:40.340 --> 00:44.630
یه پنجره ترمینال جدید باز می‌کنم که از قبل توی پوشه‌ی اصلی blog هستم.

00:46.220 --> 00:50.180
توی همین مسیر، یه پوشه‌ی جدید به اسم Moderation می‌سازم.

00:51.650 --> 00:53.240
وارد اون دایرکتوری می‌شم.

00:53.420 --> 00:55.610
ترمینال رو تمام‌صفحه می‌کنم که راحت‌تر ببینی.

00:55.630 --> 00:56.980
بقیه‌ی ترمینال‌ها همچنان فعالن.

00:56.990 --> 00:58.730
فقط با یه کلید میانبر پنجره رو بزرگ کردم.

01:02.400 --> 01:06.110
توی پوشه، با دستور `npm init -y` یه فایل package.json می‌سازم.

01:08.200 --> 01:12.490
و مثل دفعات قبل، چندتا پکیج مورد نیاز رو نصب می‌کنیم.

01:13.720 --> 01:15.490
پکیج‌های Axios، Express، Nodemon

01:18.940 --> 01:24.160
و چون این سرویس هیچ ارتباط مستقیمی با فرانت‌اند نداره، نیازی به CORS نداریم.

01:24.160 --> 01:26.710
پس پکیج CORS رو اینجا نصب نمی‌کنیم.

01:29.980 --> 01:31.540
خب حالا اینا رو نصب می‌کنم.

01:32.240 --> 01:33.590
و بعدش که نصب کامل شد...

01:35.970 --> 01:39.370
ترمینال رو برمی‌گردونم سر جای خودش.

01:39.390 --> 01:40.930
فعلاً سرور رو اجرا نمی‌کنیم.

01:40.950 --> 01:44.790
بریم یه مقدار کد بنویسیم، بعد برمی‌گردیم سراغ اجرای سرویس.

01:45.540 --> 01:46.860
می‌رم سمت ادیتور.

01:47.570 --> 01:49.670
اینجاست دایرکتوری جدید moderation.

01:50.530 --> 01:53.530
توی این پوشه، یه فایل جدید به اسم `index.js` می‌سازم.

01:55.010 --> 01:56.360
و در بالای فایل...

01:57.570 --> 01:59.820
چندتا ماژول مورد نیاز رو import می‌کنیم.

02:00.480 --> 02:01.860
ماژول `express`

02:04.260 --> 02:05.570
ماژول `body-parser`

02:09.030 --> 02:10.440
و ماژول `axios`

02:13.030 --> 02:18.430
سپس، یه اپلیکیشن Express جدید می‌سازیم و body-parser رو به صورت JSON بهش اضافه می‌کنیم.

02:23.170 --> 02:23.530
خب

02:23.530 --> 02:25.180
وظیفه‌ی این سرویس چیه دقیقاً؟

02:25.210 --> 02:28.270
تنها کاری که این سرویس انجام می‌ده اینه که منتظر eventها بمونه.

02:28.300 --> 02:31.300
و به طور خاص منتظر event `CommentCreated` باشه.

02:31.300 --> 02:32.680
یعنی وقتی این event رسید،

02:32.950 --> 02:37.900
سرویس Moderation باید event `CommentModerated` رو ارسال کنه.

02:38.590 --> 02:44.440
پس عملاً فقط یه route نیاز داریم: `/events` که مشابهش توی سایر سرویس‌ها هم داشتیم.

02:51.380 --> 02:55.250
پس یه handler می‌نویسیم برای `app.post('/events')`

02:56.060 --> 02:58.250
پارامترهای `req` و `res` رو دریافت می‌کنه.

02:58.250 --> 03:01.610
به منطق این handler بعداً برمی‌گردیم.

03:01.970 --> 03:05.090
فعلاً فقط مطمئن شیم که سرور روی یه پورت بالا میاد.

03:06.690 --> 03:09.330
چندتا پورت در حال استفاده داریم:

03:09.330 --> 03:17.550
4000 برای Post، 4001 برای Comment، 4002 برای Query، و این یکی، یعنی Moderation، می‌ره روی 4003.

03:21.930 --> 03:23.760
پس `app.listen(4003)` رو اضافه می‌کنیم.

03:27.910 --> 03:29.830
و یه `console.log` هم براش می‌ذاریم: `Listening on 4003`

03:35.670 --> 03:35.980
خب

03:36.000 --> 03:41.040
قبل از اینکه منطق route `/events` رو پیاده‌سازی کنیم، بریم یه اسکریپت توی `package.json` بسازیم

03:41.040 --> 03:45.210
تا بتونیم راحت سرویس رو با دستور `npm start` اجرا کنیم.

03:46.880 --> 03:48.530
فایل `package.json` رو باز می‌کنیم.

03:48.560 --> 03:52.280
و اسکریپت پیش‌فرض `test` رو حذف می‌کنیم و به جاش `start` می‌نویسیم.

03:53.200 --> 03:55.990
داخلش می‌نویسیم: `"start": "node index.js"`

03:59.460 --> 03:59.790
همین.

03:59.820 --> 04:00.720
به نظر خوب می‌رسه.

04:01.640 --> 04:03.100
بریم پروژه رو اجرا کنیم.

04:03.110 --> 04:05.330
برمی‌گردم به ترمینال.

04:05.780 --> 04:10.610
اون پنجره‌ای که قراره سرویس moderation رو ران کنه، پیدا می‌کنم.

04:10.640 --> 04:11.600
همینجاست.

04:12.140 --> 04:14.180
و داخلش دستور `npm start` رو می‌زنم.

04:15.590 --> 04:16.010
خب

04:16.040 --> 04:16.720
همین شد.

04:16.730 --> 04:20.580
الان چندتا سرویس مختلف برای اپلیکیشن‌مون در حال اجرا هستن.

04:20.600 --> 04:21.280
طبیعتاً!

04:21.290 --> 04:23.300
بالاخره موضوع درس ما مایکروسرویسه.

04:23.300 --> 04:27.080
پس قراره کلی سرویس بسازیم تا یاد بگیریم چطور با هم کار می‌کنن.

04:28.770 --> 04:33.590
سرویس moderation داره روی پورت 4003 اجرا می‌شه، و شروع خوبی داشتیم برای این سرویس.

04:33.590 --> 04:34.970
اینجا یه توقف کوتاه می‌کنیم.

04:34.970 --> 04:38.870
و وقتی برگشتیم، می‌خوایم بریم سراغ پیاده‌سازی handler مربوط به رویدادها.

04:38.870 --> 04:45.140
تا وقتی event با نوع `CommentCreated` دریافت کردیم، یه عملیات moderation روش انجام بدیم.

04:45.140 --> 04:48.230
و در نهایت event جدیدی به نام `CommentModerated` منتشر کنیم.

04:48.230 --> 04:49.850
پس فعلاً یه توقف کوتاه،

04:50.180 --> 04:50.990
و خیلی زود ادامه می‌دیم.