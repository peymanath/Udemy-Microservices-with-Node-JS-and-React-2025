WEBVTT

00:01.100 --> 00:03.570
We just spoke about the four different types of services.

00:03.590 --> 00:05.600
We're not going to try to create our own service.

00:05.600 --> 00:08.120
We're going to first focus on creating a node port.

00:08.220 --> 00:12.350
Now, remember, in the last video I said that we're not going to use a node port very often unless

00:12.350 --> 00:14.360
we are doing it for just development purposes.

00:14.360 --> 00:18.350
So why are we making a node port first if it's not what we're going to use very often?

00:18.380 --> 00:19.400
Well, it's really simple.

00:19.760 --> 00:22.930
A cluster IP is used to network different pods together.

00:22.940 --> 00:25.380
Right now we have only one port.

00:25.400 --> 00:29.270
So if we start to create a cluster IP service, well, it's not really going to do anything because

00:29.270 --> 00:33.860
we're not really exposing our pod to any other pods because we don't have any other pods.

00:34.340 --> 00:36.110
Why are we not creating a load balancer?

00:36.140 --> 00:39.650
A load balancer usually requires a decent amount of additional configuration.

00:39.980 --> 00:44.090
So right now, the easiest service to create and the one that actually does something for right now

00:44.090 --> 00:46.780
or actually has some effect on our cluster is a node port.

00:46.790 --> 00:48.500
That's why we're going to create that first.

00:49.220 --> 00:52.200
Now, all these different services are types of objects.

00:52.220 --> 00:55.160
Remember, a deployment, a pod, a service.

00:55.160 --> 00:57.740
These are all referred to as objects in Kubernetes.

00:57.950 --> 01:03.230
All objects that we create are made by first creating a config file and then applying that config file

01:03.230 --> 01:04.070
to our cluster.

01:04.190 --> 01:09.410
So whenever we talk about creating a service or modifying a service, we are always talking about creating

01:09.410 --> 01:10.400
a config file.

01:10.580 --> 01:11.660
So let's get to it.

01:13.010 --> 01:15.710
Back inside my editor, I'm going to find that K aids directory.

01:15.710 --> 01:19.810
And inside there I'll make a new file called Post Dash CRV.

01:20.190 --> 01:23.120
HTML CRV stands for service.

01:23.970 --> 01:24.540
Inside of here.

01:24.540 --> 01:28.890
We're going to write out some config that looks very similar to the config we wrote inside that deployment

01:28.890 --> 01:30.990
file and the pod file previously.

01:31.170 --> 01:34.560
So we will first begin with an API version of the one.

01:35.370 --> 01:37.230
A kind of service.

01:38.240 --> 01:42.710
A metadata that has name of post dash CRV.

01:43.220 --> 01:45.290
The name right here is going to be the name of the service.

01:45.290 --> 01:49.310
So if we ever try to print out all the services that are running inside of our cluster, we will see

01:49.310 --> 01:50.770
post dash XLV.

01:51.910 --> 01:56.710
Well then define our spec, which is going to customize how this service actually behaves.

01:58.150 --> 02:01.830
The first thing we'll do is designate a type of node port.

02:02.220 --> 02:05.240
So as you guess, that's going to be the type of service that we are trying to create.

02:05.250 --> 02:07.200
We are trying to make a node port service.

02:08.470 --> 02:13.780
After that, we're going to put down a selector with an app of posts like so.

02:14.430 --> 02:16.590
So what is this selector thing all about?

02:16.890 --> 02:20.670
Well, remember the entire goal of a node port?

02:21.370 --> 02:24.670
Is to expose a set of pods to the outside world.

02:25.150 --> 02:30.010
This service right here, this node port service, needs to know about what pores it should actually

02:30.010 --> 02:30.900
expose.

02:30.910 --> 02:33.070
And that's the goal of that selector thing.

02:33.550 --> 02:35.940
Remember a selector right here of app posts?

02:35.950 --> 02:39.230
We did something very similar to this back inside of our deployment file.

02:39.250 --> 02:41.470
So let's go back over to deployment very quickly.

02:42.100 --> 02:46.750
So inside of here we have that template section and the template is describing how all these different

02:46.750 --> 02:48.910
pods should be created by the deployment.

02:49.270 --> 02:53.860
Inside the template, we had a metadata with the labels of app posts.

02:54.310 --> 02:59.380
So this label right here is applying a label or some kind of designation of sorts, an identifier of

02:59.380 --> 03:01.720
sorts to the pod that is going to be created.

03:02.320 --> 03:08.200
So by writing a selector of app posts right here, we are telling the service to try to find all the

03:08.200 --> 03:14.740
different pods with a label of app posts and expose traffic or expose those pods to the outside world.

03:15.990 --> 03:21.450
This whole label system in general you can really think of as being very similar to class names that

03:21.450 --> 03:24.350
get applied to an HTML element in the browser.

03:24.360 --> 03:29.790
So if you're familiar with HTML, well, we apply class names to elements so that we can select a broad

03:29.790 --> 03:32.160
range or a set of elements very easily.

03:32.370 --> 03:37.080
You should really think of this entire label and selector system as being very similar in nature.

03:39.500 --> 03:42.110
Next up, we're going to designate some ports.

03:42.620 --> 03:46.910
So this ports section is going to list out all the different ports that we want to expose on the target

03:46.910 --> 03:47.510
pod.

03:47.970 --> 03:52.820
Let me give you a quick reminder on the post service really quickly or a post application inside of

03:52.820 --> 03:54.310
our post application directory.

03:54.320 --> 03:56.450
I'm going to open up the indexed JS file.

03:57.210 --> 04:04.340
At the very bottom you'll recall that we had said app listen on port 4000 right there so our application

04:04.440 --> 04:06.780
is a listing for traffic on Port 4000.

04:07.600 --> 04:08.530
Inside of our service.

04:08.530 --> 04:13.990
We need to make sure that we specifically expose Port 4000 on our port.

04:13.990 --> 04:16.330
So that's what this ports section is all about.

04:16.330 --> 04:19.960
We're going to list out all the different ports that we want to expose on the port.

04:21.390 --> 04:23.460
Now ports is going to be an array of entries.

04:23.460 --> 04:27.780
And remember, we set up an array entry in YAML by putting in that little dash right there.

04:28.200 --> 04:31.950
We'll say dash then name of those.

04:33.140 --> 04:35.540
A protocol of TCP.

04:36.290 --> 04:41.270
A port of 4000 and a target port of 4000.

04:42.170 --> 04:43.370
I got some bad news.

04:43.580 --> 04:47.480
These port properties right here are pretty darn confusing.

04:47.480 --> 04:48.470
I'm not going to lie with you.

04:49.090 --> 04:50.410
So what are these all about?

04:50.440 --> 04:55.300
Well, again, if we think about our post application, it is listening for traffic on Port 4000.

04:55.720 --> 05:01.390
So this 4000 right here is essentially saying we want to open up access on port 4000.

05:01.690 --> 05:04.950
But real quick question, why are we listing this out twice?

05:04.960 --> 05:07.300
What is the difference between port and target port?

05:07.570 --> 05:11.770
Let me show you a diagram and I'm going to tell you right away this diagram is probably going to make

05:11.770 --> 05:13.570
things a little bit more confusing.

05:13.780 --> 05:15.310
So bear with me for just a second.

05:17.240 --> 05:18.500
All right, here's our diagram.

05:19.280 --> 05:21.230
So on the right hand side is our node.

05:21.230 --> 05:26.810
Remember, the node is the actual kind of virtual machine that is running all of our Kubernetes objects.

05:27.200 --> 05:28.880
On the left hand side is our browser.

05:29.750 --> 05:34.460
On the far right hand side is the actual pod that is running our post container.

05:34.880 --> 05:39.740
Now on that container we've got some application that is listing for traffic on Port 4000.

05:40.250 --> 05:43.460
We refer to that port that is attached to the container.

05:43.460 --> 05:47.510
So the ultimate port that we want to direct traffic to as the target port.

05:48.140 --> 05:50.090
So target port back over here.

05:50.090 --> 05:53.600
This is the actual port that our application is listing for traffic on.

05:53.600 --> 05:56.000
That's where we ultimately want to send traffic to.

05:57.860 --> 06:00.080
We are creating a node port service.

06:00.380 --> 06:03.500
The node port service is going to have a port of its own.

06:03.950 --> 06:06.350
So that is referred to as simply the port.

06:06.350 --> 06:08.330
And that is what this property is right here.

06:09.820 --> 06:15.520
So we are sending traffic to Port 4000 on a node port service and that service internally is going to

06:15.520 --> 06:20.110
redirect that traffic over to port 4000 on the container itself.

06:20.850 --> 06:23.550
The port and the target port do not have to be identical.

06:23.550 --> 06:25.200
So this could be 5000 right here.

06:25.200 --> 06:30.900
And if we make a request to port 5000 on the node port service, the service will redirect that traffic

06:30.900 --> 06:32.730
to port 4000 on the container.

06:33.060 --> 06:37.110
Now, are there scenarios in which we would want to have a different port and a different target port?

06:37.500 --> 06:40.740
Maybe I'm kind of hard pressed to think of one off the top of my head.

06:40.830 --> 06:46.530
So usually vast majority of the time you're going to have a port and a target port that are just identical.

06:47.410 --> 06:48.670
That's along the shore of it.

06:49.060 --> 06:54.160
So at the end of the day, this whole section right here, you can pretty much copy paste between all

06:54.160 --> 06:59.740
of your different services that you are creating and just change that actual number to be whatever your

06:59.740 --> 07:01.690
actual application is listing for traffic on.

07:01.690 --> 07:06.160
So for example, if we were creating a service for our comments application, remember comments right

07:06.160 --> 07:12.220
here, if we open up that indexed file, that application is listening for traffic on 4001.

07:12.220 --> 07:16.900
So if we were creating a service for comments, we would pretty much copy paste the same thing right

07:16.900 --> 07:19.720
here and just change that to 4001.

07:21.400 --> 07:27.050
The name on here of posts is really just for logging purposes and having some name attached to it.

07:27.070 --> 07:30.390
The name can be anything you want it to be, so we could change that to whatever.

07:30.400 --> 07:31.360
No big difference.

07:31.430 --> 07:33.310
I usually just name it after the service.

07:33.400 --> 07:34.390
No big difference.

07:36.050 --> 07:36.370
Okay.

07:36.380 --> 07:39.500
So that is our service as been completed.

07:39.530 --> 07:43.200
Now, you might notice back on this diagram over here, I had this additional port right here.

07:43.220 --> 07:44.910
We'll talk about that in just a moment.

07:44.930 --> 07:47.750
This video is running a little bit long, so let's take a quick pause right here.

07:47.750 --> 07:52.280
And we're going to apply this config file to our cluster in just a moment to actually create the service.
