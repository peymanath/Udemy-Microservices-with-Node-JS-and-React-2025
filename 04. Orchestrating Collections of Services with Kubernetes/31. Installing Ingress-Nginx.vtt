WEBVTT

00:00.770 --> 00:05.060
Now that we've got some semblance of an idea between the difference of a load balancer and an ingress

00:05.060 --> 00:09.440
controller, let's take a look at the actual implementation of this ingress controller and load balancer

00:09.440 --> 00:11.990
stuff that we're going to use inside of our cluster.

00:12.440 --> 00:16.460
So we are going to be making use of a project called Ingress Engine X.

00:16.460 --> 00:22.160
This is a project or a open source library that's going to create a load balancer service inside of

00:22.160 --> 00:24.800
our cluster, plus an ingress automatically.

00:25.250 --> 00:30.170
Before we take a look at any documentation around Ingress Engine X, I want to give you a very quick

00:30.170 --> 00:32.300
and extremely important note.

00:33.330 --> 00:36.720
We are going to be using a project called Ingress Engine X.

00:36.960 --> 00:42.900
There is another extremely similar project with an almost identical name, but it is not what we are

00:42.900 --> 00:43.530
using.

00:43.530 --> 00:45.690
These are two very different projects.

00:45.690 --> 00:48.870
They are provided by different organizations.

00:48.900 --> 00:51.990
The second one is called Kubernetes Ingress.

00:52.470 --> 00:57.240
So whenever you start to look at documentation or blog posts or whatever else, make sure that whatever

00:57.240 --> 01:01.380
you're reading is related to ingress, nginx and not Kubernetes Ingress.

01:01.650 --> 01:07.590
As a matter of fact, if I open up a new tab right now and do a search for Kubernetes ingress.

01:09.420 --> 01:13.440
And then scroll down a little bit, you're going to see that some of the top results here.

01:13.710 --> 01:15.960
So here's some two GitHub repos right here.

01:15.960 --> 01:19.170
The first one that I see is ingress nginx.

01:19.170 --> 01:20.760
That is what we are using.

01:21.540 --> 01:26.070
We are not making use of Kubernetes ingress, so they're right next to each other.

01:26.070 --> 01:28.920
Really easy to click on one or the other.

01:28.920 --> 01:31.350
Just make sure you're always looking at ingress nginx.

01:31.350 --> 01:32.490
That's the long and short of it.

01:33.240 --> 01:33.480
All right.

01:33.480 --> 01:37.140
So with that in mind, let's take a look at some documentation around ingress nginx.

01:37.530 --> 01:41.160
So I'm going to open up a new tab and do a search for ingress nginx.

01:42.070 --> 01:44.620
And I should see hopefully as the first result or so.

01:44.650 --> 01:47.350
The GitHub repo for ingress nginx.

01:47.350 --> 01:50.200
Again make sure you're looking at ingress nginx.

01:50.820 --> 01:52.380
I'm going to go to that GitHub repo.

01:52.920 --> 01:56.820
And then right here at the very top in the description is a link to the official documentation.

01:56.820 --> 01:59.820
I believe there's also one in the Readme down here as well.

01:59.820 --> 02:00.000
Yeah.

02:00.000 --> 02:03.930
We could take a look at say getting started and you'll see a page like this.

02:04.440 --> 02:05.940
So make sure you come to deployment.

02:05.940 --> 02:08.670
And there's going to be an installation guide on how to get started.

02:09.180 --> 02:14.790
Now I got to be honest with you, my just very frank notes on ingress nginx.

02:15.210 --> 02:18.630
The documentation page here is not the best in the world.

02:18.630 --> 02:23.280
It turns out that once you start doing some more advanced stuff, there's just it's just a little bit

02:23.280 --> 02:25.140
hard to interpret this documentation.

02:25.140 --> 02:26.610
Sometimes I'm just going to leave it there.

02:26.610 --> 02:30.000
But if you start to read this stuff and you're getting a little bit confused, you are not alone at

02:30.000 --> 02:30.390
all.

02:31.400 --> 02:33.830
So you can take a look at the installation guide.

02:34.280 --> 02:35.600
You're going to see a couple notes on here.

02:35.600 --> 02:37.340
These notes change all the time.

02:37.340 --> 02:40.370
So if you see a different set of notes and I that is totally okay.

02:41.090 --> 02:45.920
Whenever we get started with Ingress Engine X, there is going to be what is called a mandatory command

02:45.920 --> 02:46.670
up here.

02:47.180 --> 02:52.460
So if we want to use ingress nginx inside of our cluster, we have to run this mandatory command no

02:52.460 --> 02:53.240
matter what.

02:53.660 --> 02:57.830
After that, there are going to be a series of provider specific commands.

03:15.310 --> 03:20.050
So if you are using Docker for Mac, for example, or Docker for windows, you will run this additional

03:20.050 --> 03:21.010
command right here.

03:21.010 --> 03:23.470
If you're using minikube, you'll run that command right there.

03:23.470 --> 03:27.670
And there is a set of additional commands depending upon your provider on here as well.

03:28.210 --> 03:32.860
Rather than just taking these commands and executing them inside of our terminal, I want to really

03:32.860 --> 03:34.270
understand what these commands are doing.

03:34.270 --> 03:35.740
So I'm going to copy one right here.

03:36.390 --> 03:38.760
And I'm going to go over to my code editor really quickly.

03:38.760 --> 03:42.150
Just open up an empty page and paste that command in.

03:42.880 --> 03:45.730
So take a look at this command that they're asking us to run.

03:45.940 --> 03:50.020
It is kubectl apply dash f and then we are providing a URL.

03:50.590 --> 03:53.560
URL that you see right here is to a Yaml file.

03:53.860 --> 03:59.020
So this entire installation command is very similar to the same commands we've already been running.

03:59.050 --> 04:02.080
We're essentially just taking a config file and throwing it into our cluster.

04:02.080 --> 04:06.070
The exact same thing you and I have been doing throughout this entire Kubernetes section.

04:06.780 --> 04:11.310
I'm going to take this URL and open it up inside of my browser.

04:12.420 --> 04:15.990
So you're going to see that when you get started with Kubernetes, there are going to be a lot of add

04:16.020 --> 04:20.640
ons, other packages you want to use inside of your cluster, and a lot of them are going to be installed

04:20.640 --> 04:26.670
or added in by doing the same kind of kubectl apply f and then some URL to a config file.

04:26.940 --> 04:32.250
I highly recommend that before you just take that entire command and throw it into your terminal, I

04:32.250 --> 04:36.660
really recommend you take a look at that config file and understand what you are getting.

04:37.290 --> 04:40.410
So in this case, we can see what is going to happen if we run that command.

04:40.410 --> 04:41.520
This is the config file.

04:41.520 --> 04:44.490
These are the changes that will be implemented inside of our cluster.

04:45.110 --> 04:49.220
You'll see that there are a couple of different config sections in here that look somewhat similar to

04:49.220 --> 04:50.840
the ones that we've already been writing.

04:51.080 --> 04:54.890
The big difference is that they are creating different kinds of objects than the ones we've been looking

04:54.890 --> 04:55.730
at so far.

04:55.760 --> 04:57.800
So this one creates something called a namespace.

04:57.800 --> 05:02.750
We got a config map, a service account cluster role, a lot of different kinds of objects beyond what

05:02.750 --> 05:03.890
we've looked at so far.

05:03.890 --> 05:06.200
But most importantly, I'm going to scroll down a little bit.

05:07.140 --> 05:07.980
Towards the bottom.

05:08.580 --> 05:09.780
So scroll, scroll, scroll.

05:09.780 --> 05:13.800
And down here you're going to see that there is a config section for a deployment.

05:13.800 --> 05:15.480
Well we know what a deployment is.

05:15.510 --> 05:18.420
A deployment is something that creates and manages a set of pods.

05:19.150 --> 05:23.680
Take a look kind of closely at this thing, and you'll notice that it's creating something that is called

05:23.680 --> 05:26.680
an ingress nginx ingress controller.

05:27.130 --> 05:31.960
So this ingress controller thing right here is essentially what we were just discussing back inside

05:31.960 --> 05:32.620
this diagram.

05:32.620 --> 05:36.700
So it's this ingress controller that's going to have a set of routing rules inside of it.

05:36.700 --> 05:41.020
And it's going to make sure that incoming traffic gets sent off to an appropriate pod.

05:42.600 --> 05:46.830
That was the first config file that the installation guide was asking us to run.

05:47.190 --> 05:48.930
That was the mandatory command.

05:49.320 --> 05:53.970
I now want to take a look at the other config file that we're being asked to run, if we're using Docker

05:53.970 --> 05:54.630
for Mac.

05:54.900 --> 06:00.030
So I'm going to take just that config file URL right there and again paste it into my browser.

06:01.420 --> 06:07.270
So this is what we get when we run the Docker for Mac or Docker for windows specific installation.

06:07.270 --> 06:10.090
We get just this very simple config file right here.

06:10.090 --> 06:11.530
And take a look at what it creates.

06:11.530 --> 06:14.770
It makes a service of type load balancer.

06:14.980 --> 06:17.710
So this is the other part of what we just saw inside this diagram.

06:17.710 --> 06:21.550
This is the thing that's going to somehow provision an outside load balancer.

06:21.550 --> 06:27.340
And it's going to somehow get traffic into our cluster specifically at that ingress controller thing.

06:28.430 --> 06:32.930
So between these two different config files that we just looked at, we're essentially implementing

06:32.930 --> 06:34.820
this diagram that you see right here.

06:36.650 --> 06:41.180
Okay, so now that we've got a better idea of what these different installation commands are doing,

06:41.180 --> 06:42.410
let's go ahead and run them.

06:43.040 --> 06:47.000
So no matter what, you're going to make sure that you now run this mandatory command right here.

06:47.000 --> 06:48.740
So we're going to copy that link.

06:50.120 --> 06:50.960
Or command.

06:50.960 --> 06:54.950
We'll then go back over to our terminal, paste it in and run it.

06:55.750 --> 06:57.490
We'll then see a bunch of stuff being created.

06:57.490 --> 07:02.020
Now for me, I see a lot of stuff being unchanged because I've already got nginx ingress controller

07:02.020 --> 07:03.490
installed inside my cluster.

07:04.750 --> 07:09.490
I'll then go back over and because I am using Docker for Mac, or if you are using Docker for windows,

07:09.490 --> 07:11.350
you're still going to use the same command right here.

07:11.350 --> 07:12.880
I'm going to copy that command.

07:13.690 --> 07:15.490
And run that one as well.

07:17.200 --> 07:18.370
And I see unchanged.

07:18.370 --> 07:22.180
But you're probably going to see something that says service created or what have you.

07:22.180 --> 07:26.770
And then of course, if you're using a minikube instead, you will follow these directions right here.

07:27.780 --> 07:29.760
You do not have to do the four development.

07:29.760 --> 07:33.030
That's just if you are developing Ingress Engine X.

07:33.030 --> 07:35.700
So if you are on minikube you'll just do standard usage.

07:37.100 --> 07:39.950
Okay, that is it for the initial setup.

07:40.630 --> 07:46.120
Now we've added these things into our cluster, but we have not yet set up any routing rules or anything

07:46.120 --> 07:48.010
like that around our ingress controller.

07:48.010 --> 07:49.810
So we still have a little bit of work to do.

07:49.840 --> 07:51.070
Let's take a pause right here.

07:51.070 --> 07:55.420
In the next video, we'll start to understand how we can tell the ingress controller how to route traffic

07:55.420 --> 07:57.040
off to our different set of pods.
