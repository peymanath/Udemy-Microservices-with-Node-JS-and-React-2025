WEBVTT

00:01.040 --> 00:01.640
In this video.

00:01.640 --> 00:05.630
There's one last quick thing I want to mention, and that is one very special type that we haven't really

00:05.630 --> 00:08.090
discussed too much except in kind of passing.

00:08.570 --> 00:11.240
So at the bottom of this file, I want to define one more function.

00:11.480 --> 00:13.700
I'm going to define a function called logger.

00:14.060 --> 00:16.040
This thing is going to take some message.

00:16.040 --> 00:17.390
That is a string.

00:18.020 --> 00:22.130
And then inside the function I want to just console.log that message like so.

00:23.030 --> 00:28.430
So the only goal of this function is to call console.log and it does not actually return any value.

00:28.550 --> 00:34.940
So there's no return statement inside of here to annotate this fact as a return type will put on colon

00:34.940 --> 00:36.320
void like so.

00:36.920 --> 00:42.140
So void right here means that we have a function that's going to not return anything technically.

00:42.140 --> 00:45.110
A function that returns void can return null.

00:46.220 --> 00:49.070
And it can also return undefined.

00:49.280 --> 00:55.160
But effectively we use void right here to say there will be no return value from this function if we

00:55.160 --> 00:56.960
ever accidentally return something like.

00:56.960 --> 01:01.160
So we'll very quickly get an error message that says, Hey, you can't return anything at all.

01:02.120 --> 01:06.230
Now there's one other very special type associated with function return values as well.

01:06.440 --> 01:10.160
So I'm going to make one more function in here called throw air.

01:10.610 --> 01:13.610
And throw air will also take a message that is a string.

01:14.330 --> 01:20.630
And then any time we call this, I'm going to immediately throw a new ear with that message like so.

01:21.840 --> 01:27.420
Now just you know any time you throw an error the functional technically not actually return anything.

01:28.300 --> 01:33.160
So to indicate that we could put on a colon right here that says never, and that means that we are

01:33.160 --> 01:36.100
never going to actually reach the end of this function.

01:36.100 --> 01:40.360
So we're never going to execute the function completely at some point in time inside of here, we're

01:40.360 --> 01:44.500
going to throw an error and exit the function early without returning any value.

01:45.430 --> 01:47.290
Now, this is a really big corner case.

01:47.290 --> 01:52.120
It's actually pretty darn rare that we're going to want to like intentionally throw in air like this.

01:52.120 --> 01:56.790
It's much more common for us to have some like actual return value in here.

01:56.800 --> 02:00.820
Like, let's say, if there is no message for some reason.

02:02.200 --> 02:03.580
Then we will throw an air.

02:04.580 --> 02:08.960
And then otherwise we will return, like maybe just the message, like so and so.

02:08.960 --> 02:13.490
In this case, we would still annotate this as returning a string, even though it throws an error.

02:13.760 --> 02:20.660
So we only annotate a function with the type never when we really truly never expect a function to return

02:20.660 --> 02:21.920
anything ever.

02:22.340 --> 02:27.110
If we at least expect it to return something eventually and only possibly throw an error, that's totally

02:27.110 --> 02:27.470
fine.

02:27.470 --> 02:32.300
We're still going to annotate it with whatever we expect it to eventually return, and that does include

02:32.300 --> 02:34.130
the case where we return nothing like so.

02:34.130 --> 02:39.290
So in this case, we would still do a fallback to void because we are technically not returning anything

02:39.290 --> 02:43.040
and there's just a chance of us never reaching the end of the function.

02:44.210 --> 02:44.400
Okay.

02:44.480 --> 02:45.660
So that's pretty much it.

02:45.680 --> 02:48.740
Let's take a quick pause right here and move on to our next subject.
