WEBVTT

00:01.020 --> 00:04.920
Now that we've got a custom map class put together, we're going to start thinking about adding in some

00:04.920 --> 00:07.260
methods to it to add a marker to the screen.

00:07.440 --> 00:11.820
Remember, the entire original goal of this application was to take the randomly generated user and

00:11.820 --> 00:14.220
company and add them as markers.

00:14.430 --> 00:18.630
So we're going to start to focus on adding those markers before we write any code.

00:18.660 --> 00:20.530
I just have one quick aside here.

00:20.550 --> 00:24.720
We're going to first write out a bad implementation for adding markers onto the map.

00:24.990 --> 00:27.150
So we're going to write out bad code first.

00:27.570 --> 00:32.550
Once we write out the bad code will then discuss why it is bad and we'll start to refactor it into a

00:32.550 --> 00:35.520
much better approach by using interfaces.

00:35.940 --> 00:39.870
So I want you to see the bad code because I think that the kind of bad style that we're going to look

00:39.870 --> 00:43.200
at is something that you might decide to do on your own.

00:43.430 --> 00:45.160
I'm not saying that you write bad code.

00:45.180 --> 00:49.650
I just want to help you understand what might be a bad approach and a way to improve it.

00:50.430 --> 00:54.930
As we go through this, I'm going to be very clear in telling you where the bad code is and how we're

00:54.930 --> 00:55.620
going to fix it.

00:55.620 --> 00:58.710
So you will know what is bad and what is good.

00:58.920 --> 01:00.330
Anyways, let's get to it.

01:01.050 --> 01:03.500
So I'm going to flip on over to my code editor once more.

01:03.510 --> 01:05.880
I'm inside of my custom map file right here.

01:06.150 --> 01:10.410
So I want to add one or two methods to this class to add in a marker.

01:10.920 --> 01:13.000
I think that may be a good way to do this.

01:13.020 --> 01:14.670
Hint This is not a good way.

01:14.700 --> 01:16.440
This is where the bad code starts.

01:16.440 --> 01:18.660
Would be to add in two separate methods.

01:18.960 --> 01:23.850
Maybe one method will take in a user as an argument and add a marker to the map.

01:24.030 --> 01:29.640
And then the other one can take in maybe a company as a argument and add a marker to the map.

01:30.270 --> 01:35.130
So I'm going to make one argument or one method in here called add user marker.

01:36.210 --> 01:39.600
And a second one called ADD Company Marker.

01:41.350 --> 01:44.700
Now for both these methods, we're going to take in a user and a company.

01:44.710 --> 01:50.500
So we need to annotate those arguments on these methods, to annotate the argument as being a instance

01:50.500 --> 01:52.900
of a user and an instance of a company.

01:52.900 --> 01:55.630
We have to import those types into this file.

01:56.610 --> 01:59.970
So up at the top, I'm going to add in an import statement.

02:01.380 --> 02:03.600
Or user from user.

02:04.380 --> 02:05.640
And company.

02:06.950 --> 02:08.540
From company like so.

02:09.280 --> 02:13.750
Now, one thing that we've kind of been skirting and not really discussing in great detail is exactly

02:13.750 --> 02:17.070
what we get when we create a class, remember user and company.

02:17.080 --> 02:19.060
We created them as classes.

02:19.750 --> 02:22.900
In TypeScript classes kind of have like a dual nature.

02:22.900 --> 02:28.690
When we make a class, we can use it to create an instance of an object, but we can also use a class

02:28.690 --> 02:34.690
or a variable that refers to a class, which is what user and company are to refer to that type as well.

02:35.170 --> 02:41.500
So user and company can be used to create a instance of a user or refer to the user type one or the

02:41.500 --> 02:41.950
other.

02:42.400 --> 02:46.960
There are several other things in TypeScript that kind of have this dual nature of simultaneously being

02:46.960 --> 02:49.060
a value and a type at the same time.

02:49.060 --> 02:51.060
And we're going to have a bigger discussion on this later on.

02:51.070 --> 02:52.720
I just want to mention this really quickly.

02:53.730 --> 02:58.620
So now back down in those two methods, we can say that ad user marker is going to receive a argument

02:58.620 --> 03:01.350
called user and it should be of the user type.

03:02.470 --> 03:02.560
Now.

03:02.640 --> 03:04.300
I don't think we're going to return anything here.

03:04.300 --> 03:09.190
So I'll put on a return type of void and then we'll do something similar for a company as well.

03:11.920 --> 03:12.250
Okay.

03:12.250 --> 03:17.170
So once again, kind of just like a side tip here or a side note, this approach right here creating

03:17.200 --> 03:18.690
two separate methods to add the marker.

03:18.700 --> 03:20.380
This is essentially the bad code.

03:20.380 --> 03:24.310
So we would not generally want to do this, but we'll discuss why in just a little bit.

03:24.970 --> 03:29.140
So now inside of ADD user marker, we can start to think about how we can add a marker on the screen.

03:29.530 --> 03:34.090
Once again, I want to walk through the type definition file for Google Maps and try to understand how

03:34.090 --> 03:37.690
to add a marker by just looking at the type definition file.

03:37.930 --> 03:42.580
Again, you can go look at Stack Overflow to figure out how to do this stuff, but I just want you to

03:42.580 --> 03:47.650
get in the habit of trying to look at a type definition file to understand how to work with the library.

03:48.600 --> 03:53.850
So to pull up the type definition file for Google Maps, I can go back up to like Google Maps map right

03:53.850 --> 03:56.910
here and do a command click on map like so.

03:57.210 --> 03:59.970
And that will pull up the Google Maps type definition file.

04:00.820 --> 04:06.610
Then in here, I'm going to do a search for marker, and I'm going to look for a class called marker

04:06.610 --> 04:08.470
under the section called Overlays.

04:09.430 --> 04:12.910
So this class right here is how we create a marker and show it on the screen.

04:12.910 --> 04:15.460
We're going to create an instance of a marker.

04:15.940 --> 04:21.610
So we need to figure out how to create a marker properly and pass it some configuration options that

04:21.610 --> 04:24.970
it's going to get a marker to display in the correct position.

04:25.960 --> 04:28.990
So to figure out how to do that, we can take a look at the constructor function.

04:29.290 --> 04:30.580
So here's the constructor.

04:30.580 --> 04:36.250
It tells us that whenever we create an instance of a marker, we can optionally pass in some options.

04:36.820 --> 04:41.500
And that options object should conform to the marker options interface.

04:42.300 --> 04:47.250
So in other words, when we create a marker, we can customize it by passing in an object that has the

04:47.250 --> 04:50.340
properties specified by this interface right here.

04:50.910 --> 04:56.580
So I'm going to command click click again on interface marker options and this is going to tell us the

04:56.580 --> 04:59.190
possible options we can pass into the marker.

05:00.240 --> 05:04.410
You'll notice that these options are once again nicely commented, so we can scroll through and read

05:04.410 --> 05:07.800
all the different ways that we can somehow customize this marker.

05:08.560 --> 05:11.230
There are two properties in particular that we're going to take a look at.

05:11.230 --> 05:15.610
So I'm going to scroll down a little bit and I'm going to find one option called map right here.

05:17.610 --> 05:23.460
When we create a marker, we can pass in that option's object and it can have a map property that will

05:23.460 --> 05:26.790
be a reference to the map that we want to show the marker on.

05:27.590 --> 05:32.450
So in a normal Google Maps application, or I should say, like on any Web page, you can potentially

05:32.450 --> 05:34.430
have multiple different maps.

05:34.520 --> 05:38.180
So like maybe five maps tiled about the screen or something like that.

05:38.660 --> 05:42.950
If we create a marker, we have to specify which map we want to add the marker to.

05:43.340 --> 05:47.630
So the idea here is when we create the marker, we're going to pass in an options object that has a

05:47.630 --> 05:48.590
map property.

05:49.040 --> 05:52.970
And that map property is going to refer to the map that we want to add the marker to.

05:53.000 --> 05:53.780
That's it.

05:55.620 --> 06:01.350
Now, the other option that we're going to take a look at is a couple more properties down right here.

06:02.340 --> 06:04.830
So the other property we care about is the position property.

06:04.830 --> 06:08.370
And this is going to specify where the marker shows up on the map itself.

06:08.910 --> 06:15.510
And you'll notice we can either pass in an instance of latitude, longitude class or a latitude longitude

06:15.510 --> 06:20.370
literal, which is just a plain object that has a latitude that is a number and a longitude.

06:20.370 --> 06:21.180
That is a number.

06:22.420 --> 06:26.860
So once again, we've now taken a look at a type definition file and kind of figured out how to create

06:26.860 --> 06:32.260
a marker by just looking at this stuff without having to go and look at some complicated documentation

06:32.260 --> 06:33.490
or anything like that.

06:33.910 --> 06:36.850
So let's try to now create a marker using this information.

06:37.780 --> 06:41.350
Back inside of custom map, I'm going to find add user marker.

06:41.680 --> 06:46.300
So I'm going to create a new Google Maps dot marker.

06:47.720 --> 06:49.700
So that's going to be the instance of the marker.

06:50.030 --> 06:52.550
This is us calling a constructor function right here.

06:52.550 --> 06:56.930
And so that's where we can optionally pass in some marker options object.

06:57.410 --> 07:02.000
So I'm going to pass in an object and I'm going to give it that map property, which is going to refer

07:02.000 --> 07:04.430
to the map that we want to show this marker on.

07:05.100 --> 07:10.290
So the map we want to show this marker on is going to be the Google map that we created and assigned

07:10.290 --> 07:12.750
as a field to our custom map class.

07:13.750 --> 07:16.810
So map is going to be this dot google map.

07:17.670 --> 07:21.510
And then remember, the second property we care about is the position property.

07:21.750 --> 07:25.080
So I want to specify the position for this marker as well.

07:26.490 --> 07:31.650
We can hover over position right here and it will tell us that this property has to be either a latitude

07:31.650 --> 07:35.460
longitude instance or a latitude longitude literal.

07:35.460 --> 07:39.180
And remember, that literal would be an object that has the lat and long properties.

07:40.240 --> 07:45.370
So this will be an object and we're going to get the latitude from our user because that's where our

07:45.370 --> 07:46.630
location is coming from.

07:46.630 --> 07:48.940
So we can do user location.

07:49.240 --> 07:49.840
Let.

07:50.790 --> 07:57.240
And then we'll also do our longitude, which will be user location lag, and that's pretty much it.

07:59.000 --> 08:00.220
All right, so let's save this.

08:00.230 --> 08:04.220
We don't have any implementation for ADD company marker just yet, but I just want to make sure that

08:04.220 --> 08:06.140
we can actually get a marker to display.

08:06.170 --> 08:07.550
So I'm going to save the file.

08:07.790 --> 08:10.190
I'm going to flip back over to index dots.

08:10.730 --> 08:15.680
I'm going to uncomment the user import statement up here so we can create an instance of a user and

08:15.680 --> 08:16.820
then add it to our map.

08:17.950 --> 08:18.920
So I'll say const.

08:18.940 --> 08:20.890
User is new user.

08:22.280 --> 08:24.710
I'll then make sure that I assign the custom map to a variable.

08:24.710 --> 08:28.310
So I'll say Custom map is going to be that custom map we created.

08:29.050 --> 08:33.400
And then we can do custom map dot add user marker.

08:34.230 --> 08:35.370
In passing the user.

08:37.090 --> 08:38.400
All right, so let's save this.

08:38.410 --> 08:40.180
I'm going to flip back over to my browser.

08:41.400 --> 08:43.470
And I can see a marker displayed.

08:44.070 --> 08:48.060
Now, remember, we are randomly generating the latitude and longitude for the user.

08:48.060 --> 08:51.750
So every time you refresh you're going to see the marker in a different location.

08:52.350 --> 08:55.970
Sometimes the marker might not actually be visible and kind of like off the screen.

08:55.980 --> 09:00.540
That means that we just generated a latitude or longitude that is not like in the limits of typical

09:00.540 --> 09:01.440
Google Maps.

09:02.130 --> 09:03.530
That's probably not going to happen too often.

09:03.540 --> 09:07.860
I just want to mention that if you sometimes refresh and you don't see the marker, chances are everything

09:07.860 --> 09:08.850
is working correctly.

09:08.850 --> 09:10.500
We just have a bad latitude.

09:11.420 --> 09:12.650
All right, so that looks pretty good.

09:12.650 --> 09:17.420
So let's take a quick pause right here and start to implement our ADD company marker method in the next

09:17.420 --> 09:18.020
video.
